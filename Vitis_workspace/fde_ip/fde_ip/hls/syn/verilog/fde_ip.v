// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fde_ip_fde_ip,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.490000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=128,HLS_SYN_DSP=0,HLS_SYN_FF=2897,HLS_SYN_LUT=4211,HLS_VERSION=2023_2}" *)

module fde_ip (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 19;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] start_pc;
wire   [31:0] code_ram_q0;
reg    nb_instruction_ap_vld;
reg   [15:0] pc_0_load_reg_1148;
wire    ap_CS_fsm_state3;
wire   [31:0] grp_fetch_fu_210_ap_return;
reg   [31:0] instruction_reg_1154;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    grp_fetch_fu_210_ap_start;
wire    grp_fetch_fu_210_ap_done;
wire    grp_fetch_fu_210_ap_idle;
wire    grp_fetch_fu_210_ap_ready;
wire   [15:0] grp_fetch_fu_210_code_ram_address0;
wire    grp_fetch_fu_210_code_ram_ce0;
wire    grp_decode_fu_217_ap_start;
wire    grp_decode_fu_217_ap_done;
wire    grp_decode_fu_217_ap_idle;
wire    grp_decode_fu_217_ap_ready;
wire   [4:0] grp_decode_fu_217_ap_return_0;
wire   [4:0] grp_decode_fu_217_ap_return_1;
wire   [2:0] grp_decode_fu_217_ap_return_2;
wire   [4:0] grp_decode_fu_217_ap_return_3;
wire   [4:0] grp_decode_fu_217_ap_return_4;
wire   [6:0] grp_decode_fu_217_ap_return_5;
wire   [2:0] grp_decode_fu_217_ap_return_6;
wire   [19:0] grp_decode_fu_217_ap_return_7;
wire    grp_execute_fu_223_ap_start;
wire    grp_execute_fu_223_ap_done;
wire    grp_execute_fu_223_ap_idle;
wire    grp_execute_fu_223_ap_ready;
wire   [5:0] grp_execute_fu_223_d_i_func7_val;
wire   [15:0] grp_execute_fu_223_ap_return_0;
wire   [31:0] grp_execute_fu_223_ap_return_1;
wire   [31:0] grp_execute_fu_223_ap_return_2;
wire   [31:0] grp_execute_fu_223_ap_return_3;
wire   [31:0] grp_execute_fu_223_ap_return_4;
wire   [31:0] grp_execute_fu_223_ap_return_5;
wire   [31:0] grp_execute_fu_223_ap_return_6;
wire   [31:0] grp_execute_fu_223_ap_return_7;
wire   [31:0] grp_execute_fu_223_ap_return_8;
wire   [31:0] grp_execute_fu_223_ap_return_9;
wire   [31:0] grp_execute_fu_223_ap_return_10;
wire   [31:0] grp_execute_fu_223_ap_return_11;
wire   [31:0] grp_execute_fu_223_ap_return_12;
wire   [31:0] grp_execute_fu_223_ap_return_13;
wire   [31:0] grp_execute_fu_223_ap_return_14;
wire   [31:0] grp_execute_fu_223_ap_return_15;
wire   [31:0] grp_execute_fu_223_ap_return_16;
wire   [31:0] grp_execute_fu_223_ap_return_17;
wire   [31:0] grp_execute_fu_223_ap_return_18;
wire   [31:0] grp_execute_fu_223_ap_return_19;
wire   [31:0] grp_execute_fu_223_ap_return_20;
wire   [31:0] grp_execute_fu_223_ap_return_21;
wire   [31:0] grp_execute_fu_223_ap_return_22;
wire   [31:0] grp_execute_fu_223_ap_return_23;
wire   [31:0] grp_execute_fu_223_ap_return_24;
wire   [31:0] grp_execute_fu_223_ap_return_25;
wire   [31:0] grp_execute_fu_223_ap_return_26;
wire   [31:0] grp_execute_fu_223_ap_return_27;
wire   [31:0] grp_execute_fu_223_ap_return_28;
wire   [31:0] grp_execute_fu_223_ap_return_29;
wire   [31:0] grp_execute_fu_223_ap_return_30;
wire   [31:0] grp_execute_fu_223_ap_return_31;
wire   [31:0] grp_execute_fu_223_ap_return_32;
wire    is_running_running_cond_update_fu_268_ap_ready;
wire   [0:0] is_running_running_cond_update_fu_268_ap_return;
reg    grp_fetch_fu_210_ap_start_reg;
wire    ap_CS_fsm_state2;
reg   [8:0] ap_NS_fsm;
wire    ap_NS_fsm_state3;
reg    grp_decode_fu_217_ap_start_reg;
wire    ap_NS_fsm_state4;
reg    grp_execute_fu_223_ap_start_reg;
wire    ap_NS_fsm_state5;
wire    ap_CS_fsm_state8;
reg   [15:0] pc_0_fu_64;
wire   [15:0] pc_fu_274_p1;
reg   [31:0] reg_file_0_fu_68;
reg   [31:0] reg_file_1_0_fu_72;
reg   [31:0] reg_file_2_0_fu_76;
reg   [31:0] reg_file_3_0_fu_80;
reg   [31:0] reg_file_4_0_fu_84;
reg   [31:0] reg_file_5_0_fu_88;
reg   [31:0] reg_file_6_0_fu_92;
reg   [31:0] reg_file_7_0_fu_96;
reg   [31:0] reg_file_8_0_fu_100;
reg   [31:0] reg_file_9_0_fu_104;
reg   [31:0] reg_file_10_0_fu_108;
reg   [31:0] reg_file_11_0_fu_112;
reg   [31:0] reg_file_12_0_fu_116;
reg   [31:0] reg_file_13_0_fu_120;
reg   [31:0] reg_file_14_0_fu_124;
reg   [31:0] reg_file_15_0_fu_128;
reg   [31:0] reg_file_16_0_fu_132;
reg   [31:0] reg_file_17_0_fu_136;
reg   [31:0] reg_file_18_0_fu_140;
reg   [31:0] reg_file_19_0_fu_144;
reg   [31:0] reg_file_20_0_fu_148;
reg   [31:0] reg_file_21_0_fu_152;
reg   [31:0] reg_file_22_0_fu_156;
reg   [31:0] reg_file_23_0_fu_160;
reg   [31:0] reg_file_24_0_fu_164;
reg   [31:0] reg_file_25_0_fu_168;
reg   [31:0] reg_file_26_0_fu_172;
reg   [31:0] reg_file_27_0_fu_176;
reg   [31:0] reg_file_28_0_fu_180;
reg   [31:0] reg_file_29_0_fu_184;
reg   [31:0] reg_file_30_0_fu_188;
reg   [31:0] reg_file_31_0_fu_192;
wire    ap_CS_fsm_state9;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_fetch_fu_210_ap_start_reg = 1'b0;
#0 grp_decode_fu_217_ap_start_reg = 1'b0;
#0 grp_execute_fu_223_ap_start_reg = 1'b0;
#0 pc_0_fu_64 = 16'd0;
#0 reg_file_0_fu_68 = 32'd0;
#0 reg_file_1_0_fu_72 = 32'd0;
#0 reg_file_2_0_fu_76 = 32'd0;
#0 reg_file_3_0_fu_80 = 32'd0;
#0 reg_file_4_0_fu_84 = 32'd0;
#0 reg_file_5_0_fu_88 = 32'd0;
#0 reg_file_6_0_fu_92 = 32'd0;
#0 reg_file_7_0_fu_96 = 32'd0;
#0 reg_file_8_0_fu_100 = 32'd0;
#0 reg_file_9_0_fu_104 = 32'd0;
#0 reg_file_10_0_fu_108 = 32'd0;
#0 reg_file_11_0_fu_112 = 32'd0;
#0 reg_file_12_0_fu_116 = 32'd0;
#0 reg_file_13_0_fu_120 = 32'd0;
#0 reg_file_14_0_fu_124 = 32'd0;
#0 reg_file_15_0_fu_128 = 32'd0;
#0 reg_file_16_0_fu_132 = 32'd0;
#0 reg_file_17_0_fu_136 = 32'd0;
#0 reg_file_18_0_fu_140 = 32'd0;
#0 reg_file_19_0_fu_144 = 32'd0;
#0 reg_file_20_0_fu_148 = 32'd0;
#0 reg_file_21_0_fu_152 = 32'd0;
#0 reg_file_22_0_fu_156 = 32'd0;
#0 reg_file_23_0_fu_160 = 32'd0;
#0 reg_file_24_0_fu_164 = 32'd0;
#0 reg_file_25_0_fu_168 = 32'd0;
#0 reg_file_26_0_fu_172 = 32'd0;
#0 reg_file_27_0_fu_176 = 32'd0;
#0 reg_file_28_0_fu_180 = 32'd0;
#0 reg_file_29_0_fu_184 = 32'd0;
#0 reg_file_30_0_fu_188 = 32'd0;
#0 reg_file_31_0_fu_192 = 32'd0;
end

fde_ip_fetch grp_fetch_fu_210(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fetch_fu_210_ap_start),
    .ap_done(grp_fetch_fu_210_ap_done),
    .ap_idle(grp_fetch_fu_210_ap_idle),
    .ap_ready(grp_fetch_fu_210_ap_ready),
    .pc_val(pc_0_fu_64),
    .code_ram_address0(grp_fetch_fu_210_code_ram_address0),
    .code_ram_ce0(grp_fetch_fu_210_code_ram_ce0),
    .code_ram_q0(code_ram_q0),
    .ap_return(grp_fetch_fu_210_ap_return)
);

fde_ip_decode grp_decode_fu_217(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_decode_fu_217_ap_start),
    .ap_done(grp_decode_fu_217_ap_done),
    .ap_idle(grp_decode_fu_217_ap_idle),
    .ap_ready(grp_decode_fu_217_ap_ready),
    .instruction(grp_fetch_fu_210_ap_return),
    .ap_return_0(grp_decode_fu_217_ap_return_0),
    .ap_return_1(grp_decode_fu_217_ap_return_1),
    .ap_return_2(grp_decode_fu_217_ap_return_2),
    .ap_return_3(grp_decode_fu_217_ap_return_3),
    .ap_return_4(grp_decode_fu_217_ap_return_4),
    .ap_return_5(grp_decode_fu_217_ap_return_5),
    .ap_return_6(grp_decode_fu_217_ap_return_6),
    .ap_return_7(grp_decode_fu_217_ap_return_7)
);

fde_ip_execute grp_execute_fu_223(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_execute_fu_223_ap_start),
    .ap_done(grp_execute_fu_223_ap_done),
    .ap_idle(grp_execute_fu_223_ap_idle),
    .ap_ready(grp_execute_fu_223_ap_ready),
    .pc_val(pc_0_load_reg_1148),
    .p_read(reg_file_0_fu_68),
    .p_read1(reg_file_1_0_fu_72),
    .p_read2(reg_file_2_0_fu_76),
    .p_read3(reg_file_3_0_fu_80),
    .p_read4(reg_file_4_0_fu_84),
    .p_read5(reg_file_5_0_fu_88),
    .p_read6(reg_file_6_0_fu_92),
    .p_read7(reg_file_7_0_fu_96),
    .p_read8(reg_file_8_0_fu_100),
    .p_read9(reg_file_9_0_fu_104),
    .p_read10(reg_file_10_0_fu_108),
    .p_read11(reg_file_11_0_fu_112),
    .p_read12(reg_file_12_0_fu_116),
    .p_read13(reg_file_13_0_fu_120),
    .p_read14(reg_file_14_0_fu_124),
    .p_read15(reg_file_15_0_fu_128),
    .p_read16(reg_file_16_0_fu_132),
    .p_read17(reg_file_17_0_fu_136),
    .p_read18(reg_file_18_0_fu_140),
    .p_read19(reg_file_19_0_fu_144),
    .p_read20(reg_file_20_0_fu_148),
    .p_read21(reg_file_21_0_fu_152),
    .p_read22(reg_file_22_0_fu_156),
    .p_read23(reg_file_23_0_fu_160),
    .p_read24(reg_file_24_0_fu_164),
    .p_read25(reg_file_25_0_fu_168),
    .p_read26(reg_file_26_0_fu_172),
    .p_read27(reg_file_27_0_fu_176),
    .p_read28(reg_file_28_0_fu_180),
    .p_read29(reg_file_29_0_fu_184),
    .p_read30(reg_file_30_0_fu_188),
    .p_read31(reg_file_31_0_fu_192),
    .d_i_opcode_val(grp_decode_fu_217_ap_return_0),
    .d_i_rd_val(grp_decode_fu_217_ap_return_1),
    .d_i_func3_val(grp_decode_fu_217_ap_return_2),
    .d_i_rs1_val(grp_decode_fu_217_ap_return_3),
    .d_i_rs2_val(grp_decode_fu_217_ap_return_4),
    .d_i_func7_val(grp_execute_fu_223_d_i_func7_val),
    .d_i_type_val(grp_decode_fu_217_ap_return_6),
    .d_i_imm_val(grp_decode_fu_217_ap_return_7),
    .ap_return_0(grp_execute_fu_223_ap_return_0),
    .ap_return_1(grp_execute_fu_223_ap_return_1),
    .ap_return_2(grp_execute_fu_223_ap_return_2),
    .ap_return_3(grp_execute_fu_223_ap_return_3),
    .ap_return_4(grp_execute_fu_223_ap_return_4),
    .ap_return_5(grp_execute_fu_223_ap_return_5),
    .ap_return_6(grp_execute_fu_223_ap_return_6),
    .ap_return_7(grp_execute_fu_223_ap_return_7),
    .ap_return_8(grp_execute_fu_223_ap_return_8),
    .ap_return_9(grp_execute_fu_223_ap_return_9),
    .ap_return_10(grp_execute_fu_223_ap_return_10),
    .ap_return_11(grp_execute_fu_223_ap_return_11),
    .ap_return_12(grp_execute_fu_223_ap_return_12),
    .ap_return_13(grp_execute_fu_223_ap_return_13),
    .ap_return_14(grp_execute_fu_223_ap_return_14),
    .ap_return_15(grp_execute_fu_223_ap_return_15),
    .ap_return_16(grp_execute_fu_223_ap_return_16),
    .ap_return_17(grp_execute_fu_223_ap_return_17),
    .ap_return_18(grp_execute_fu_223_ap_return_18),
    .ap_return_19(grp_execute_fu_223_ap_return_19),
    .ap_return_20(grp_execute_fu_223_ap_return_20),
    .ap_return_21(grp_execute_fu_223_ap_return_21),
    .ap_return_22(grp_execute_fu_223_ap_return_22),
    .ap_return_23(grp_execute_fu_223_ap_return_23),
    .ap_return_24(grp_execute_fu_223_ap_return_24),
    .ap_return_25(grp_execute_fu_223_ap_return_25),
    .ap_return_26(grp_execute_fu_223_ap_return_26),
    .ap_return_27(grp_execute_fu_223_ap_return_27),
    .ap_return_28(grp_execute_fu_223_ap_return_28),
    .ap_return_29(grp_execute_fu_223_ap_return_29),
    .ap_return_30(grp_execute_fu_223_ap_return_30),
    .ap_return_31(grp_execute_fu_223_ap_return_31),
    .ap_return_32(grp_execute_fu_223_ap_return_32)
);

fde_ip_running_cond_update is_running_running_cond_update_fu_268(
    .ap_ready(is_running_running_cond_update_fu_268_ap_ready),
    .instruction(instruction_reg_1154),
    .pc_val(grp_execute_fu_223_ap_return_0),
    .ap_return(is_running_running_cond_update_fu_268_ap_return)
);

fde_ip_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .start_pc(start_pc),
    .nb_instruction(32'd1),
    .nb_instruction_ap_vld(nb_instruction_ap_vld),
    .code_ram_address0(grp_fetch_fu_210_code_ram_address0),
    .code_ram_ce0(grp_fetch_fu_210_code_ram_ce0),
    .code_ram_q0(code_ram_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_decode_fu_217_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4))) begin
            grp_decode_fu_217_ap_start_reg <= 1'b1;
        end else if ((grp_decode_fu_217_ap_ready == 1'b1)) begin
            grp_decode_fu_217_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_execute_fu_223_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (1'b1 == ap_NS_fsm_state5))) begin
            grp_execute_fu_223_ap_start_reg <= 1'b1;
        end else if ((grp_execute_fu_223_ap_ready == 1'b1)) begin
            grp_execute_fu_223_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fetch_fu_210_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state3) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_fetch_fu_210_ap_start_reg <= 1'b1;
        end else if ((grp_fetch_fu_210_ap_ready == 1'b1)) begin
            grp_fetch_fu_210_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        pc_0_fu_64 <= pc_fu_274_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pc_0_fu_64 <= grp_execute_fu_223_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_0_fu_68 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_0_fu_68 <= grp_execute_fu_223_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_10_0_fu_108 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_10_0_fu_108 <= grp_execute_fu_223_ap_return_11;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_11_0_fu_112 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_11_0_fu_112 <= grp_execute_fu_223_ap_return_12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_12_0_fu_116 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_12_0_fu_116 <= grp_execute_fu_223_ap_return_13;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_13_0_fu_120 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_13_0_fu_120 <= grp_execute_fu_223_ap_return_14;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_14_0_fu_124 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_14_0_fu_124 <= grp_execute_fu_223_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_15_0_fu_128 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_15_0_fu_128 <= grp_execute_fu_223_ap_return_16;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_16_0_fu_132 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_16_0_fu_132 <= grp_execute_fu_223_ap_return_17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_17_0_fu_136 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_17_0_fu_136 <= grp_execute_fu_223_ap_return_18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_18_0_fu_140 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_18_0_fu_140 <= grp_execute_fu_223_ap_return_19;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_19_0_fu_144 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_19_0_fu_144 <= grp_execute_fu_223_ap_return_20;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_1_0_fu_72 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_1_0_fu_72 <= grp_execute_fu_223_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_20_0_fu_148 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_20_0_fu_148 <= grp_execute_fu_223_ap_return_21;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_21_0_fu_152 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_21_0_fu_152 <= grp_execute_fu_223_ap_return_22;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_22_0_fu_156 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_22_0_fu_156 <= grp_execute_fu_223_ap_return_23;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_23_0_fu_160 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_23_0_fu_160 <= grp_execute_fu_223_ap_return_24;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_24_0_fu_164 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_24_0_fu_164 <= grp_execute_fu_223_ap_return_25;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_25_0_fu_168 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_25_0_fu_168 <= grp_execute_fu_223_ap_return_26;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_26_0_fu_172 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_26_0_fu_172 <= grp_execute_fu_223_ap_return_27;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_27_0_fu_176 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_27_0_fu_176 <= grp_execute_fu_223_ap_return_28;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_28_0_fu_180 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_28_0_fu_180 <= grp_execute_fu_223_ap_return_29;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_29_0_fu_184 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_29_0_fu_184 <= grp_execute_fu_223_ap_return_30;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_2_0_fu_76 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_2_0_fu_76 <= grp_execute_fu_223_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_30_0_fu_188 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_30_0_fu_188 <= grp_execute_fu_223_ap_return_31;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_31_0_fu_192 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_31_0_fu_192 <= grp_execute_fu_223_ap_return_32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_3_0_fu_80 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_3_0_fu_80 <= grp_execute_fu_223_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_4_0_fu_84 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_4_0_fu_84 <= grp_execute_fu_223_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_5_0_fu_88 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_5_0_fu_88 <= grp_execute_fu_223_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_6_0_fu_92 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_6_0_fu_92 <= grp_execute_fu_223_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_7_0_fu_96 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_7_0_fu_96 <= grp_execute_fu_223_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_8_0_fu_100 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_8_0_fu_100 <= grp_execute_fu_223_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_file_9_0_fu_104 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_file_9_0_fu_104 <= grp_execute_fu_223_ap_return_10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        instruction_reg_1154 <= grp_fetch_fu_210_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pc_0_load_reg_1148 <= pc_0_fu_64;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        nb_instruction_ap_vld = 1'b1;
    end else begin
        nb_instruction_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (is_running_running_cond_update_fu_268_ap_return == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state3 = ap_NS_fsm[32'd2];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

assign ap_NS_fsm_state5 = ap_NS_fsm[32'd4];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_decode_fu_217_ap_start = grp_decode_fu_217_ap_start_reg;

assign grp_execute_fu_223_ap_start = grp_execute_fu_223_ap_start_reg;

assign grp_execute_fu_223_d_i_func7_val = grp_decode_fu_217_ap_return_5[5:0];

assign grp_fetch_fu_210_ap_start = grp_fetch_fu_210_ap_start_reg;

assign pc_fu_274_p1 = start_pc[15:0];

endmodule //fde_ip
