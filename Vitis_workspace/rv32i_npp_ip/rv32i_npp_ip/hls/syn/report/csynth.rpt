

================================================================
== Synthesis Summary Report of 'rv32i_npp_ip'
================================================================
+ General Information: 
    * Date:           Thu Nov 23 19:15:24 2023
    * Version:        2023.2 (Build 4023990 on Oct 11 2023)
    * Project:        rv32i_npp_ip
    * Solution:       hls (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg400-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +--------------------+--------+-------+---------+--------+----------+---------+------+----------+-----------+----+-----------+-----------+-----+
    |       Modules      |  Issue |       | Latency | Latency| Iteration|         | Trip |          |           |    |           |           |     |
    |       & Loops      |  Type  | Slack | (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined|   BRAM    | DSP|     FF    |    LUT    | URAM|
    +--------------------+--------+-------+---------+--------+----------+---------+------+----------+-----------+----+-----------+-----------+-----+
    |+ rv32i_npp_ip      |  Timing|  -2.39|        -|       -|         -|        -|     -|        no|  256 (91%)|   -|  2020 (1%)|  3662 (6%)|    -|
    | o VITIS_LOOP_41_2  |       -|   7.30|        -|       -|         7|        7|     -|       yes|          -|   -|          -|          -|    -|
    +--------------------+--------+-------+---------+--------+----------+---------+------+----------+-----------+----+-----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+-------------------+
| Interface     | Data Width | Address Width | Offset | Register | Resource Estimate |
+---------------+------------+---------------+--------+----------+-------------------+
| s_axi_control | 32         | 20            | 16     | 0        | BRAM=256          |
+---------------+------------+---------------+--------+----------+-------------------+

* S_AXILITE Registers
+---------------+---------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register            | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+---------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL                | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER                | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER              | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR              | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | start_pc            | 0x10   | 32    | W      | Data signal of start_pc          |                                                                      |
| s_axi_control | nb_instruction      | 0x18   | 32    | R      | Data signal of nb_instruction    |                                                                      |
| s_axi_control | nb_instruction_ctrl | 0x1c   | 32    | R      | Control signal of nb_instruction | 0=nb_instruction_ap_vld                                              |
+---------------+---------------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------------+-----------+---------------+
| Argument       | Direction | Datatype      |
+----------------+-----------+---------------+
| start_pc       | in        | unsigned int  |
| code_ram       | in        | unsigned int* |
| data_ram       | inout     | int*          |
| nb_instruction | out       | unsigned int* |
+----------------+-----------+---------------+

* SW-to-HW Mapping
+----------------+---------------+----------+-----------------------------------------------+
| Argument       | HW Interface  | HW Type  | HW Info                                       |
+----------------+---------------+----------+-----------------------------------------------+
| start_pc       | s_axi_control | register | name=start_pc offset=0x10 range=32            |
| code_ram       | s_axi_control | memory   | name=code_ram offset=262144 range=262144      |
| data_ram       | s_axi_control | memory   | name=data_ram offset=524288 range=262144      |
| nb_instruction | s_axi_control | register | name=nb_instruction offset=0x18 range=32      |
| nb_instruction | s_axi_control | register | name=nb_instruction_ctrl offset=0x1c range=32 |
+----------------+---------------+----------+-----------------------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.


================================================================
== Bind Op Report
================================================================
+------------------------+-----+--------+-----------+-----+--------+---------+
| Name                   | DSP | Pragma | Variable  | Op  | Impl   | Latency |
+------------------------+-----+--------+-----------+-----+--------+---------+
| + rv32i_npp_ip         | 0   |        |           |     |        |         |
|   npc4_fu_1465_p2      |     |        | npc4      | add | fabric | 0       |
|   result_2_fu_1475_p2  |     |        | result_2  | add | fabric | 0       |
|   grp_fu_619_p2        |     |        | result    | add | fabric | 0       |
|   result_18_fu_1687_p2 |     |        | result_18 | sub | fabric | 0       |
|   grp_fu_619_p2        |     |        | result_19 | add | fabric | 0       |
|   grp_fu_619_p2        |     |        | result_16 | add | fabric | 0       |
|   result_5_fu_1770_p2  |     |        | result_5  | sub | fabric | 0       |
|   result_6_fu_1774_p2  |     |        | result_6  | add | fabric | 0       |
|   add_ln239_fu_2237_p2 |     |        | add_ln239 | add | fabric | 0       |
|   grp_fu_640_p2        |     |        | add_ln236 | add | fabric | 0       |
|   add_ln233_fu_2270_p2 |     |        | add_ln233 | add | fabric | 0       |
|   grp_fu_640_p2        |     |        | add_ln228 | add | fabric | 0       |
|   add_ln224_fu_2285_p2 |     |        | add_ln224 | add | fabric | 0       |
|   grp_fu_640_p2        |     |        | add_ln225 | add | fabric | 0       |
|   grp_fu_640_p2        |     |        | add_ln219 | add | fabric | 0       |
|   grp_fu_640_p2        |     |        | add_ln242 | add | fabric | 0       |
|   add_ln36_fu_2340_p2  |     |        | add_ln36  | add | fabric | 0       |
+------------------------+-----+--------+-----------+-----+--------+---------+


================================================================
== Storage Report
================================================================
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| Name              | Usage     | Type      | BRAM | URAM | Pragma | Variable | Impl | Latency | Bitwidth, Depth, |
|                   |           |           |      |      |        |          |      |         | Banks            |
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| + rv32i_npp_ip    |           |           | 256  | 0    |        |          |      |         |                  |
|   control_s_axi_U | interface | s_axilite | 256  |      |        |          |      |         |                  |
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------------+----------------------------------+-----------------------------------------------------+
| Type            | Options                          | Location                                            |
+-----------------+----------------------------------+-----------------------------------------------------+
| interface       | s_axilite port=start_pc          | rv32i_npp_ip.cpp:25 in rv32i_npp_ip, start_pc       |
| interface       | s_axilite port=code_ram          | rv32i_npp_ip.cpp:26 in rv32i_npp_ip, code_ram       |
| interface       | s_axilite port=data_ram          | rv32i_npp_ip.cpp:27 in rv32i_npp_ip, data_ram       |
| interface       | s_axilite port=nb_instruction    | rv32i_npp_ip.cpp:28 in rv32i_npp_ip, nb_instruction |
| interface       | s_axilite port=return            | rv32i_npp_ip.cpp:29 in rv32i_npp_ip, return         |
| inline          | recursive                        | rv32i_npp_ip.cpp:30 in rv32i_npp_ip                 |
| array_partition | variable=reg_file dim=1 complete | rv32i_npp_ip.cpp:33 in rv32i_npp_ip, reg_file       |
| pipeline        | II=7                             | rv32i_npp_ip.cpp:42 in rv32i_npp_ip                 |
+-----------------+----------------------------------+-----------------------------------------------------+


