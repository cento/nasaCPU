-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rv32i_npp_ip is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 20;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of rv32i_npp_ip is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "rv32i_npp_ip_rv32i_npp_ip,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.688200,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=256,HLS_SYN_DSP=0,HLS_SYN_FF=2020,HLS_SYN_LUT=3662,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8067 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000001100111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal start_pc : STD_LOGIC_VECTOR (31 downto 0);
    signal code_ram_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal code_ram_ce0 : STD_LOGIC;
    signal code_ram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_ram_ce0 : STD_LOGIC;
    signal data_ram_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_ram_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_ram_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal nb_instruction_ap_vld : STD_LOGIC;
    signal grp_fu_619_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_645 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal d_i_type_reg_462 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_is_jalr_reg_2667 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_load_reg_2659 : STD_LOGIC_VECTOR (0 downto 0);
    signal pc_1_reg_2600 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal instruction_reg_2613 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal d_i_opcode_fu_926_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_opcode_reg_2626 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_rd_reg_2631 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_imm_inst_19_12_reg_2637 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_i_func3_reg_2642 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_rs2_reg_2653 : STD_LOGIC_VECTOR (4 downto 0);
    signal d_i_is_load_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_store_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_store_reg_2663 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_jalr_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_lui_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_lui_reg_2672 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_op_imm_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_op_imm_reg_2677 : STD_LOGIC_VECTOR (0 downto 0);
    signal opch_fu_1016_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal opcl_fu_1026_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_is_r_type_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_is_r_type_reg_2689 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_imm_inst_31_reg_2697 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_imm_inst_11_8_reg_2703 : STD_LOGIC_VECTOR (3 downto 0);
    signal d_imm_inst_7_reg_2708 : STD_LOGIC_VECTOR (0 downto 0);
    signal rv1_fu_1068_p67 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv1_reg_2713 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln254_fu_1204_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln254_reg_2741 : STD_LOGIC_VECTOR (17 downto 0);
    signal rv2_fu_1208_p67 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_reg_2746 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln74_fu_1444_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln74_reg_2765 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln106_fu_1471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln100_fu_1481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln100_reg_2775 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_reg_2780 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_28_fu_1631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_27_fu_1650_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_27_reg_2790 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_24_fu_1658_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_23_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_23_reg_2800 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_22_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_22_reg_2805 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_21_fu_1677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_21_reg_2810 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_20_fu_1692_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_20_reg_2815 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_17_fu_1700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln84_fu_1705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_15_fu_1718_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_14_fu_1736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_14_reg_2835 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_11_fu_1744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_fu_1748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln50_fu_1752_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_fu_1760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_reg_2855 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_7_fu_1778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_4_fu_1786_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a01_fu_1802_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal a01_reg_2870 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal msize_fu_1806_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal msize_reg_2877 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_630_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal a1_reg_2881 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln131_fu_1850_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln131_reg_2891 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln131_2_fu_1868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln131_2_reg_2896 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln128_fu_1882_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln128_2_fu_1901_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal w_reg_2926 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln175_fu_2017_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln175_reg_2931 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln176_fu_2021_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln176_reg_2936 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln179_fu_2033_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln179_reg_2941 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln180_fu_2037_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln12_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_reg_2954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_phi_mux_d_i_type_phi_fu_465_p26 : STD_LOGIC_VECTOR (2 downto 0);
    signal d_i_imm_fu_1428_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_d_i_imm_5_phi_fu_511_p12 : STD_LOGIC_VECTOR (19 downto 0);
    signal d_i_imm_5_reg_507 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln143_fu_1362_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln142_fu_1383_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln141_fu_1397_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_result_29_phi_fu_531_p48 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_29_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln97_fu_1790_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred66_state5 : BOOLEAN;
    signal ap_predicate_pred373_state5 : BOOLEAN;
    signal zext_ln52_1_fu_1794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred382_state5 : BOOLEAN;
    signal zext_ln50_1_fu_1798_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_pred388_state5 : BOOLEAN;
    signal ap_predicate_pred393_state5 : BOOLEAN;
    signal ap_predicate_pred398_state5 : BOOLEAN;
    signal ap_predicate_pred404_state5 : BOOLEAN;
    signal ap_predicate_pred414_state5 : BOOLEAN;
    signal ap_phi_mux_result_34_phi_fu_587_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_34_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln12_fu_825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_fu_1821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln128_3_fu_1908_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln155_fu_1913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln131_3_fu_1918_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal nbi_fu_266 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln36_fu_2340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal or_ln12_fu_2332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal pc_fu_270 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal add_ln239_fu_2237_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_640_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln233_fu_2270_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln222_fu_2299_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln39_fu_651_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_file_fu_274 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal and_ln205_fu_2057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_file_1_fu_278 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_2_fu_282 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_3_fu_286 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_4_fu_290 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_5_fu_294 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_6_fu_298 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_7_fu_302 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_8_fu_306 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_9_fu_310 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_10_fu_314 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_11_fu_318 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_12_fu_322 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_13_fu_326 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_14_fu_330 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_15_fu_334 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_16_fu_338 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_17_fu_342 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_18_fu_346 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_19_fu_350 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_20_fu_354 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_21_fu_358 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_22_fu_362 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_23_fu_366 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_24_fu_370 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_25_fu_374 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_26_fu_378 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_27_fu_382 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_28_fu_386 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_29_fu_390 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_30_fu_394 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_file_31_fu_398 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sext_ln74_fu_1439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv1_fu_1068_p65 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv1_fu_1068_p66 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p65 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_fu_1208_p66 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_1344_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal d_i_imm_4_fu_1353_p5 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_1367_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal d_i_imm_3_fu_1376_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal d_i_imm_2_fu_1388_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_1412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1419_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pc4_fu_1456_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal npc4_fu_1465_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal imm12_fu_1448_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln103_fu_1461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_fu_1475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_fu_1502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_4_fu_1536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_3_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_2_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln24_fu_1506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_fu_1521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_fu_1516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln26_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_fu_1541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_1_fu_1555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_1_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln18_2_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_3_fu_1577_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_2_fu_1569_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_6_fu_1604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_5_fu_1599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_4_fu_1591_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_2_fu_1621_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_3_fu_1625_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln57_1_fu_1636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_623_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_25_fu_1640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_26_fu_1645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln48_1_fu_1673_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln43_1_fu_1682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_18_fu_1687_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shift_fu_1709_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shift_1_fu_1712_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln57_fu_1722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_fu_1726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_13_fu_1731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln48_fu_1756_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln43_fu_1765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_5_fu_1770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_6_fu_1774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_01_fu_1818_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_1830_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln_fu_1838_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln131_1_fu_1846_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln131_1_fu_1856_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln131_fu_1826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln131_2_fu_1864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv2_0_fu_1815_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln128_1_fu_1878_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln128_1_fu_1889_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln128_fu_1874_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln128_2_fu_1897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln168_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b2_fu_1948_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b3_fu_1958_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln168_1_fu_1991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b1_fu_1934_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_4_fu_1983_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln168_2_fu_2004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b0_fu_1930_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_5_fu_1996_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fu_2009_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a1_1_fu_1922_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal h1_fu_1968_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal h0_fu_1944_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal h_fu_2025_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln205_fu_2046_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln205_fu_2041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln205_1_fu_2051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln6_fu_2227_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal cond_fu_2223_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln5_fu_2252_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln264_fu_2262_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln224_fu_2285_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln4_fu_2289_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln12_1_fu_2326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal rv1_fu_1068_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p13 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p15 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p19 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p21 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p23 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p25 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p27 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p29 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p31 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p35 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p37 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p39 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p41 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p43 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p45 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p47 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p49 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p51 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p53 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p55 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p57 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p59 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p61 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv1_fu_1068_p63 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p5 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p7 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p9 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p11 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p13 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p15 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p17 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p19 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p21 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p23 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p25 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p27 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p29 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p31 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p35 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p37 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p39 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p41 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p43 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p45 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p47 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p49 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p51 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p53 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p55 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p57 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p59 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p61 : STD_LOGIC_VECTOR (4 downto 0);
    signal rv2_fu_1208_p63 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component rv32i_npp_ip_sparsemux_65_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (4 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (4 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (4 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (4 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (4 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (4 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (4 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (4 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (4 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (4 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (4 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (4 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (4 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (4 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (4 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (4 downto 0);
        din15_WIDTH : INTEGER;
        CASE16 : STD_LOGIC_VECTOR (4 downto 0);
        din16_WIDTH : INTEGER;
        CASE17 : STD_LOGIC_VECTOR (4 downto 0);
        din17_WIDTH : INTEGER;
        CASE18 : STD_LOGIC_VECTOR (4 downto 0);
        din18_WIDTH : INTEGER;
        CASE19 : STD_LOGIC_VECTOR (4 downto 0);
        din19_WIDTH : INTEGER;
        CASE20 : STD_LOGIC_VECTOR (4 downto 0);
        din20_WIDTH : INTEGER;
        CASE21 : STD_LOGIC_VECTOR (4 downto 0);
        din21_WIDTH : INTEGER;
        CASE22 : STD_LOGIC_VECTOR (4 downto 0);
        din22_WIDTH : INTEGER;
        CASE23 : STD_LOGIC_VECTOR (4 downto 0);
        din23_WIDTH : INTEGER;
        CASE24 : STD_LOGIC_VECTOR (4 downto 0);
        din24_WIDTH : INTEGER;
        CASE25 : STD_LOGIC_VECTOR (4 downto 0);
        din25_WIDTH : INTEGER;
        CASE26 : STD_LOGIC_VECTOR (4 downto 0);
        din26_WIDTH : INTEGER;
        CASE27 : STD_LOGIC_VECTOR (4 downto 0);
        din27_WIDTH : INTEGER;
        CASE28 : STD_LOGIC_VECTOR (4 downto 0);
        din28_WIDTH : INTEGER;
        CASE29 : STD_LOGIC_VECTOR (4 downto 0);
        din29_WIDTH : INTEGER;
        CASE30 : STD_LOGIC_VECTOR (4 downto 0);
        din30_WIDTH : INTEGER;
        CASE31 : STD_LOGIC_VECTOR (4 downto 0);
        din31_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rv32i_npp_ip_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        start_pc : OUT STD_LOGIC_VECTOR (31 downto 0);
        nb_instruction : IN STD_LOGIC_VECTOR (31 downto 0);
        nb_instruction_ap_vld : IN STD_LOGIC;
        code_ram_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        code_ram_ce0 : IN STD_LOGIC;
        code_ram_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        data_ram_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_ram_ce0 : IN STD_LOGIC;
        data_ram_we0 : IN STD_LOGIC_VECTOR (3 downto 0);
        data_ram_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_ram_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component rv32i_npp_ip_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        start_pc => start_pc,
        nb_instruction => nbi_fu_266,
        nb_instruction_ap_vld => nb_instruction_ap_vld,
        code_ram_address0 => code_ram_address0,
        code_ram_ce0 => code_ram_ce0,
        code_ram_q0 => code_ram_q0,
        data_ram_address0 => data_ram_address0,
        data_ram_ce0 => data_ram_ce0,
        data_ram_we0 => data_ram_we0,
        data_ram_d0 => data_ram_d0,
        data_ram_q0 => data_ram_q0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    sparsemux_65_5_32_1_1_U1 : component rv32i_npp_ip_sparsemux_65_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000",
        din0_WIDTH => 32,
        CASE1 => "00001",
        din1_WIDTH => 32,
        CASE2 => "00010",
        din2_WIDTH => 32,
        CASE3 => "00011",
        din3_WIDTH => 32,
        CASE4 => "00100",
        din4_WIDTH => 32,
        CASE5 => "00101",
        din5_WIDTH => 32,
        CASE6 => "00110",
        din6_WIDTH => 32,
        CASE7 => "00111",
        din7_WIDTH => 32,
        CASE8 => "01000",
        din8_WIDTH => 32,
        CASE9 => "01001",
        din9_WIDTH => 32,
        CASE10 => "01010",
        din10_WIDTH => 32,
        CASE11 => "01011",
        din11_WIDTH => 32,
        CASE12 => "01100",
        din12_WIDTH => 32,
        CASE13 => "01101",
        din13_WIDTH => 32,
        CASE14 => "01110",
        din14_WIDTH => 32,
        CASE15 => "01111",
        din15_WIDTH => 32,
        CASE16 => "10000",
        din16_WIDTH => 32,
        CASE17 => "10001",
        din17_WIDTH => 32,
        CASE18 => "10010",
        din18_WIDTH => 32,
        CASE19 => "10011",
        din19_WIDTH => 32,
        CASE20 => "10100",
        din20_WIDTH => 32,
        CASE21 => "10101",
        din21_WIDTH => 32,
        CASE22 => "10110",
        din22_WIDTH => 32,
        CASE23 => "10111",
        din23_WIDTH => 32,
        CASE24 => "11000",
        din24_WIDTH => 32,
        CASE25 => "11001",
        din25_WIDTH => 32,
        CASE26 => "11010",
        din26_WIDTH => 32,
        CASE27 => "11011",
        din27_WIDTH => 32,
        CASE28 => "11100",
        din28_WIDTH => 32,
        CASE29 => "11101",
        din29_WIDTH => 32,
        CASE30 => "11110",
        din30_WIDTH => 32,
        CASE31 => "11111",
        din31_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => reg_file_fu_274,
        din1 => reg_file_1_fu_278,
        din2 => reg_file_2_fu_282,
        din3 => reg_file_3_fu_286,
        din4 => reg_file_4_fu_290,
        din5 => reg_file_5_fu_294,
        din6 => reg_file_6_fu_298,
        din7 => reg_file_7_fu_302,
        din8 => reg_file_8_fu_306,
        din9 => reg_file_9_fu_310,
        din10 => reg_file_10_fu_314,
        din11 => reg_file_11_fu_318,
        din12 => reg_file_12_fu_322,
        din13 => reg_file_13_fu_326,
        din14 => reg_file_14_fu_330,
        din15 => reg_file_15_fu_334,
        din16 => reg_file_16_fu_338,
        din17 => reg_file_17_fu_342,
        din18 => reg_file_18_fu_346,
        din19 => reg_file_19_fu_350,
        din20 => reg_file_20_fu_354,
        din21 => reg_file_21_fu_358,
        din22 => reg_file_22_fu_362,
        din23 => reg_file_23_fu_366,
        din24 => reg_file_24_fu_370,
        din25 => reg_file_25_fu_374,
        din26 => reg_file_26_fu_378,
        din27 => reg_file_27_fu_382,
        din28 => reg_file_28_fu_386,
        din29 => reg_file_29_fu_390,
        din30 => reg_file_30_fu_394,
        din31 => reg_file_31_fu_398,
        def => rv1_fu_1068_p65,
        sel => rv1_fu_1068_p66,
        dout => rv1_fu_1068_p67);

    sparsemux_65_5_32_1_1_U2 : component rv32i_npp_ip_sparsemux_65_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00000",
        din0_WIDTH => 32,
        CASE1 => "00001",
        din1_WIDTH => 32,
        CASE2 => "00010",
        din2_WIDTH => 32,
        CASE3 => "00011",
        din3_WIDTH => 32,
        CASE4 => "00100",
        din4_WIDTH => 32,
        CASE5 => "00101",
        din5_WIDTH => 32,
        CASE6 => "00110",
        din6_WIDTH => 32,
        CASE7 => "00111",
        din7_WIDTH => 32,
        CASE8 => "01000",
        din8_WIDTH => 32,
        CASE9 => "01001",
        din9_WIDTH => 32,
        CASE10 => "01010",
        din10_WIDTH => 32,
        CASE11 => "01011",
        din11_WIDTH => 32,
        CASE12 => "01100",
        din12_WIDTH => 32,
        CASE13 => "01101",
        din13_WIDTH => 32,
        CASE14 => "01110",
        din14_WIDTH => 32,
        CASE15 => "01111",
        din15_WIDTH => 32,
        CASE16 => "10000",
        din16_WIDTH => 32,
        CASE17 => "10001",
        din17_WIDTH => 32,
        CASE18 => "10010",
        din18_WIDTH => 32,
        CASE19 => "10011",
        din19_WIDTH => 32,
        CASE20 => "10100",
        din20_WIDTH => 32,
        CASE21 => "10101",
        din21_WIDTH => 32,
        CASE22 => "10110",
        din22_WIDTH => 32,
        CASE23 => "10111",
        din23_WIDTH => 32,
        CASE24 => "11000",
        din24_WIDTH => 32,
        CASE25 => "11001",
        din25_WIDTH => 32,
        CASE26 => "11010",
        din26_WIDTH => 32,
        CASE27 => "11011",
        din27_WIDTH => 32,
        CASE28 => "11100",
        din28_WIDTH => 32,
        CASE29 => "11101",
        din29_WIDTH => 32,
        CASE30 => "11110",
        din30_WIDTH => 32,
        CASE31 => "11111",
        din31_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => reg_file_fu_274,
        din1 => reg_file_1_fu_278,
        din2 => reg_file_2_fu_282,
        din3 => reg_file_3_fu_286,
        din4 => reg_file_4_fu_290,
        din5 => reg_file_5_fu_294,
        din6 => reg_file_6_fu_298,
        din7 => reg_file_7_fu_302,
        din8 => reg_file_8_fu_306,
        din9 => reg_file_9_fu_310,
        din10 => reg_file_10_fu_314,
        din11 => reg_file_11_fu_318,
        din12 => reg_file_12_fu_322,
        din13 => reg_file_13_fu_326,
        din14 => reg_file_14_fu_330,
        din15 => reg_file_15_fu_334,
        din16 => reg_file_16_fu_338,
        din17 => reg_file_17_fu_342,
        din18 => reg_file_18_fu_346,
        din19 => reg_file_19_fu_350,
        din20 => reg_file_20_fu_354,
        din21 => reg_file_21_fu_358,
        din22 => reg_file_22_fu_362,
        din23 => reg_file_23_fu_366,
        din24 => reg_file_24_fu_370,
        din25 => reg_file_25_fu_374,
        din26 => reg_file_26_fu_378,
        din27 => reg_file_27_fu_382,
        din28 => reg_file_28_fu_386,
        din29 => reg_file_29_fu_390,
        din30 => reg_file_30_fu_394,
        din31 => reg_file_31_fu_398,
        def => rv2_fu_1208_p65,
        sel => rv2_fu_1208_p66,
        dout => rv2_fu_1208_p67);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    d_i_imm_5_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_d_i_type_phi_fu_465_p26 = ap_const_lv3_4)) and not((ap_phi_mux_d_i_type_phi_fu_465_p26 = ap_const_lv3_3)) and not((ap_phi_mux_d_i_type_phi_fu_465_p26 = ap_const_lv3_2)) and not((ap_phi_mux_d_i_type_phi_fu_465_p26 = ap_const_lv3_5)) and not((ap_phi_mux_d_i_type_phi_fu_465_p26 = ap_const_lv3_6)) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                d_i_imm_5_reg_507 <= ap_const_lv20_0;
            elsif (((d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_i_imm_5_reg_507 <= sext_ln141_fu_1397_p1;
            elsif (((d_i_type_reg_462 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_i_imm_5_reg_507 <= sext_ln142_fu_1383_p1;
            elsif (((d_i_type_reg_462 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_i_imm_5_reg_507 <= sext_ln143_fu_1362_p1;
            elsif (((d_i_type_reg_462 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_i_imm_5_reg_507 <= instruction_reg_2613(31 downto 12);
            elsif (((d_i_type_reg_462 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                d_i_imm_5_reg_507 <= d_i_imm_fu_1428_p5;
            end if; 
        end if;
    end process;

    d_i_type_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_0) and (opch_fu_1016_p4 = ap_const_lv2_1))) then 
                d_i_type_reg_462 <= ap_const_lv3_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_4) and (opch_fu_1016_p4 = ap_const_lv2_1))) then 
                d_i_type_reg_462 <= ap_const_lv3_1;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_5) and (opch_fu_1016_p4 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_5) and (opch_fu_1016_p4 = ap_const_lv2_0)))) then 
                d_i_type_reg_462 <= ap_const_lv3_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_0) and (opch_fu_1016_p4 = ap_const_lv2_3))) then 
                d_i_type_reg_462 <= ap_const_lv3_4;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_1) and (opch_fu_1016_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_4) and (opch_fu_1016_p4 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_0) and (opch_fu_1016_p4 = ap_const_lv2_0)))) then 
                d_i_type_reg_462 <= ap_const_lv3_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_3) and (opch_fu_1016_p4 = ap_const_lv2_3))) then 
                d_i_type_reg_462 <= ap_const_lv3_6;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_2)) or (not((opcl_fu_1026_p4 = ap_const_lv3_3)) and not((opcl_fu_1026_p4 = ap_const_lv3_1)) and not((opcl_fu_1026_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_3)) or (not((opcl_fu_1026_p4 = ap_const_lv3_4)) and not((opcl_fu_1026_p4 = ap_const_lv3_5)) and not((opcl_fu_1026_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_1)) or (not((opcl_fu_1026_p4 = ap_const_lv3_4)) and not((opcl_fu_1026_p4 = ap_const_lv3_5)) and not((opcl_fu_1026_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_0)))) then 
                d_i_type_reg_462 <= ap_const_lv3_7;
            end if; 
        end if;
    end process;

    nbi_fu_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                nbi_fu_266 <= ap_const_lv32_1;
            elsif (((or_ln12_fu_2332_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                nbi_fu_266 <= add_ln36_fu_2340_p2;
            end if; 
        end if;
    end process;

    pc_fu_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                pc_fu_270 <= trunc_ln39_fu_651_p1;
            elsif (((d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                pc_fu_270 <= select_ln222_fu_2299_p3;
            elsif (((d_i_type_reg_462 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                pc_fu_270 <= add_ln233_fu_2270_p2;
            elsif ((((d_i_type_reg_462 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((d_i_type_reg_462 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((d_i_type_reg_462 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((d_i_type_reg_462 = ap_const_lv3_0) or (d_i_type_reg_462 = ap_const_lv3_7))))) then 
                pc_fu_270 <= grp_fu_640_p2;
            elsif (((d_i_type_reg_462 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                pc_fu_270 <= add_ln239_fu_2237_p2;
            end if; 
        end if;
    end process;

    reg_file_10_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_10_fu_314 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_A) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_10_fu_314 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_11_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_11_fu_318 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_B) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_11_fu_318 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_12_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_12_fu_322 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_C) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_12_fu_322 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_13_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_13_fu_326 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_D) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_13_fu_326 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_14_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_14_fu_330 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_E) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_14_fu_330 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_15_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_15_fu_334 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_F) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_15_fu_334 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_16_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_16_fu_338 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_10) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_16_fu_338 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_17_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_17_fu_342 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_11) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_17_fu_342 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_18_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_18_fu_346 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_12) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_18_fu_346 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_19_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_19_fu_350 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_13) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_19_fu_350 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_1_fu_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_1_fu_278 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_1) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_1_fu_278 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_20_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_20_fu_354 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_14) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_20_fu_354 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_21_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_21_fu_358 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_15) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_21_fu_358 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_22_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_22_fu_362 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_16) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_22_fu_362 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_23_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_23_fu_366 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_17) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_23_fu_366 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_24_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_24_fu_370 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_18) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_24_fu_370 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_25_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_25_fu_374 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_19) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_25_fu_374 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_26_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_26_fu_378 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_1A) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_26_fu_378 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_27_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_27_fu_382 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_1B) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_27_fu_382 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_28_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_28_fu_386 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_1C) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_28_fu_386 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_29_fu_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_29_fu_390 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_1D) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_29_fu_390 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_2_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_2_fu_282 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_2) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_2_fu_282 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_30_fu_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_30_fu_394 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_1E) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_30_fu_394 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_31_fu_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_31_fu_398 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_1F) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_31_fu_398 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_3_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_3_fu_286 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_3) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_3_fu_286 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_4_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_4_fu_290 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_4) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_4_fu_290 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_5_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_5_fu_294 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_5) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_5_fu_294 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_6_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_6_fu_298 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_6) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_6_fu_298 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_7_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_7_fu_302 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_7) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_7_fu_302 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_8_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_8_fu_306 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_8) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_8_fu_306 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_9_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_9_fu_310 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_9) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_9_fu_310 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    reg_file_fu_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reg_file_fu_274 <= ap_const_lv32_0;
            elsif (((d_i_rd_reg_2631 = ap_const_lv5_0) and (ap_const_lv1_1 = and_ln205_fu_2057_p2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                reg_file_fu_274 <= ap_phi_mux_result_34_phi_fu_587_p16;
            end if; 
        end if;
    end process;

    result_29_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((d_i_func3_reg_2642 = ap_const_lv3_0) and (d_i_type_reg_462 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= result_7_fu_1778_p3;
            elsif (((ap_predicate_pred414_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= result_8_reg_2855;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_2) and (d_i_type_reg_462 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= zext_ln50_fu_1752_p1;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_3) and (d_i_type_reg_462 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= zext_ln52_fu_1748_p1;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_4) and (d_i_type_reg_462 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= result_11_fu_1744_p2;
            elsif (((ap_predicate_pred404_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= result_14_reg_2835;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_6) and (d_i_type_reg_462 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= result_15_fu_1718_p2;
            elsif (((ap_predicate_pred398_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= result_20_reg_2815;
            elsif (((ap_predicate_pred393_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= result_21_reg_2810;
            elsif (((ap_predicate_pred388_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= zext_ln50_1_fu_1798_p1;
            elsif (((ap_predicate_pred382_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= zext_ln52_1_fu_1794_p1;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_4) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1))) then 
                result_29_reg_527 <= result_24_fu_1658_p2;
            elsif (((ap_predicate_pred373_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= result_27_reg_2790;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_6) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1))) then 
                result_29_reg_527 <= result_28_fu_1631_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state4) and ((d_i_type_reg_462 = ap_const_lv3_0) or (d_i_type_reg_462 = ap_const_lv3_7))) or ((d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_0)))) then 
                result_29_reg_527 <= ap_const_lv32_0;
            elsif (((d_i_type_reg_462 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= select_ln100_reg_2775;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_7) and (d_i_type_reg_462 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= result_4_fu_1786_p2;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_7) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1))) then 
                result_29_reg_527 <= result_17_fu_1700_p2;
            elsif (((d_i_is_jalr_reg_2667 = ap_const_lv1_1) and (d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= zext_ln84_fu_1705_p1;
            elsif ((((d_i_type_reg_462 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_predicate_pred66_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                result_29_reg_527 <= reg_645;
            elsif (((d_i_type_reg_462 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_29_reg_527 <= zext_ln97_fu_1790_p1;
            elsif (((d_i_type_reg_462 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_29_reg_527 <= zext_ln106_fu_1471_p1;
            end if; 
        end if;
    end process;

    result_34_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((d_i_is_load_reg_2659 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                result_34_reg_584 <= result_29_reg_527;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_5) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                result_34_reg_584 <= zext_ln180_fu_2037_p1;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_0) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                result_34_reg_584 <= sext_ln175_reg_2931;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_1) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                result_34_reg_584 <= sext_ln179_reg_2941;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_2) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                result_34_reg_584 <= w_reg_2926;
            elsif (((d_i_func3_reg_2642 = ap_const_lv3_4) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                result_34_reg_584 <= zext_ln176_reg_2936;
            elsif ((((d_i_func3_reg_2642 = ap_const_lv3_3) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((d_i_func3_reg_2642 = ap_const_lv3_6) and (d_i_is_load_reg_2659 = ap_const_lv1_1)) or ((d_i_func3_reg_2642 = ap_const_lv3_7) and (d_i_is_load_reg_2659 = ap_const_lv1_1)))))) then 
                result_34_reg_584 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                a01_reg_2870 <= a01_fu_1802_p1;
                a1_reg_2881 <= ap_phi_mux_result_29_phi_fu_531_p48(17 downto 2);
                msize_reg_2877 <= instruction_reg_2613(13 downto 12);
                shl_ln131_2_reg_2896 <= shl_ln131_2_fu_1868_p2;
                shl_ln131_reg_2891 <= shl_ln131_fu_1850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    ap_predicate_pred373_state5 <= ((d_i_func3_reg_2642 = ap_const_lv3_5) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1));
                    ap_predicate_pred382_state5 <= ((d_i_func3_reg_2642 = ap_const_lv3_3) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1));
                    ap_predicate_pred388_state5 <= ((d_i_func3_reg_2642 = ap_const_lv3_2) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1));
                    ap_predicate_pred393_state5 <= ((d_i_func3_reg_2642 = ap_const_lv3_1) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1));
                    ap_predicate_pred398_state5 <= ((d_i_func3_reg_2642 = ap_const_lv3_0) and (d_i_is_load_reg_2659 = ap_const_lv1_0) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (d_i_is_op_imm_reg_2677 = ap_const_lv1_1));
                    ap_predicate_pred404_state5 <= ((d_i_func3_reg_2642 = ap_const_lv3_5) and (d_i_type_reg_462 = ap_const_lv3_1));
                    ap_predicate_pred414_state5 <= ((d_i_func3_reg_2642 = ap_const_lv3_1) and (d_i_type_reg_462 = ap_const_lv3_1));
                    ap_predicate_pred66_state5 <= ((d_i_is_load_reg_2659 = ap_const_lv1_1) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2));
                result_14_reg_2835 <= result_14_fu_1736_p3;
                result_1_reg_2780 <= result_1_fu_1615_p2;
                result_20_reg_2815 <= result_20_fu_1692_p3;
                result_21_reg_2810 <= result_21_fu_1677_p2;
                result_22_reg_2805 <= result_22_fu_1668_p2;
                result_23_reg_2800 <= result_23_fu_1663_p2;
                result_27_reg_2790 <= result_27_fu_1650_p3;
                result_8_reg_2855 <= result_8_fu_1760_p2;
                    select_ln100_reg_2775(31 downto 2) <= select_ln100_fu_1481_p3(31 downto 2);
                trunc_ln74_reg_2765 <= trunc_ln74_fu_1444_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                d_i_func3_reg_2642 <= code_ram_q0(14 downto 12);
                d_i_is_jalr_reg_2667 <= d_i_is_jalr_fu_998_p2;
                d_i_is_load_reg_2659 <= d_i_is_load_fu_986_p2;
                d_i_is_lui_reg_2672 <= d_i_is_lui_fu_1004_p2;
                d_i_is_op_imm_reg_2677 <= d_i_is_op_imm_fu_1010_p2;
                d_i_is_r_type_reg_2689 <= d_i_is_r_type_fu_1036_p2;
                d_i_is_store_reg_2663 <= d_i_is_store_fu_992_p2;
                d_i_opcode_reg_2626 <= code_ram_q0(6 downto 2);
                d_i_rd_reg_2631 <= code_ram_q0(11 downto 7);
                d_i_rs2_reg_2653 <= code_ram_q0(24 downto 20);
                d_imm_inst_11_8_reg_2703 <= code_ram_q0(11 downto 8);
                d_imm_inst_19_12_reg_2637 <= code_ram_q0(19 downto 12);
                d_imm_inst_31_reg_2697 <= code_ram_q0(31 downto 31);
                d_imm_inst_7_reg_2708 <= code_ram_q0(7 downto 7);
                instruction_reg_2613 <= code_ram_q0;
                rv1_reg_2713 <= rv1_fu_1068_p67;
                rv2_reg_2746 <= rv2_fu_1208_p67;
                trunc_ln254_reg_2741 <= trunc_ln254_fu_1204_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp_ln12_reg_2954 <= icmp_ln12_fu_2321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                pc_1_reg_2600 <= pc_fu_270;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((d_i_is_load_reg_2659 = ap_const_lv1_1) and (d_i_is_jalr_reg_2667 = ap_const_lv1_0) and (d_i_type_reg_462 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((d_i_type_reg_462 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then
                reg_645 <= grp_fu_619_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                sext_ln175_reg_2931 <= sext_ln175_fu_2017_p1;
                sext_ln179_reg_2941 <= sext_ln179_fu_2033_p1;
                w_reg_2926 <= data_ram_q0;
                    zext_ln176_reg_2936(7 downto 0) <= zext_ln176_fu_2021_p1(7 downto 0);
            end if;
        end if;
    end process;
    select_ln100_reg_2775(1 downto 0) <= "00";
    zext_ln176_reg_2936(31 downto 8) <= "000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state8, or_ln12_fu_2332_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((or_ln12_fu_2332_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    a01_fu_1802_p1 <= ap_phi_mux_result_29_phi_fu_531_p48(2 - 1 downto 0);
    a1_1_fu_1922_p3 <= result_29_reg_527(1 downto 1);
    add_ln224_fu_2285_p2 <= std_logic_vector(unsigned(trunc_ln254_reg_2741) + unsigned(trunc_ln74_reg_2765));
    add_ln233_fu_2270_p2 <= std_logic_vector(unsigned(select_ln264_fu_2262_p3) + unsigned(pc_1_reg_2600));
    add_ln239_fu_2237_p2 <= std_logic_vector(unsigned(trunc_ln6_fu_2227_p4) + unsigned(pc_1_reg_2600));
    add_ln36_fu_2340_p2 <= std_logic_vector(unsigned(nbi_fu_266) + unsigned(ap_const_lv32_1));
    and_ln18_fu_1609_p2 <= (icmp_ln18_6_fu_1604_p2 and icmp_ln18_5_fu_1599_p2);
    and_ln205_fu_2057_p2 <= (icmp_ln205_fu_2041_p2 and icmp_ln205_1_fu_2051_p2);
    and_ln43_1_fu_1682_p2 <= (grp_fu_623_p3 and d_i_is_r_type_reg_2689);
    and_ln43_fu_1765_p2 <= (grp_fu_623_p3 and d_i_is_r_type_reg_2689);
    and_ln_fu_1838_p3 <= (tmp_6_fu_1830_p3 & ap_const_lv1_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_d_i_imm_5_phi_fu_511_p12_assign_proc : process(ap_CS_fsm_state4, d_i_type_reg_462, instruction_reg_2613, d_i_imm_fu_1428_p5, d_i_imm_5_reg_507, sext_ln143_fu_1362_p1, sext_ln142_fu_1383_p1, sext_ln141_fu_1397_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
            if ((d_i_type_reg_462 = ap_const_lv3_2)) then 
                ap_phi_mux_d_i_imm_5_phi_fu_511_p12 <= sext_ln141_fu_1397_p1;
            elsif ((d_i_type_reg_462 = ap_const_lv3_3)) then 
                ap_phi_mux_d_i_imm_5_phi_fu_511_p12 <= sext_ln142_fu_1383_p1;
            elsif ((d_i_type_reg_462 = ap_const_lv3_4)) then 
                ap_phi_mux_d_i_imm_5_phi_fu_511_p12 <= sext_ln143_fu_1362_p1;
            elsif ((d_i_type_reg_462 = ap_const_lv3_5)) then 
                ap_phi_mux_d_i_imm_5_phi_fu_511_p12 <= instruction_reg_2613(31 downto 12);
            elsif ((d_i_type_reg_462 = ap_const_lv3_6)) then 
                ap_phi_mux_d_i_imm_5_phi_fu_511_p12 <= d_i_imm_fu_1428_p5;
            else 
                ap_phi_mux_d_i_imm_5_phi_fu_511_p12 <= d_i_imm_5_reg_507;
            end if;
        else 
            ap_phi_mux_d_i_imm_5_phi_fu_511_p12 <= d_i_imm_5_reg_507;
        end if; 
    end process;


    ap_phi_mux_d_i_type_phi_fu_465_p26_assign_proc : process(ap_CS_fsm_state3, opch_fu_1016_p4, opcl_fu_1026_p4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_0) and (opch_fu_1016_p4 = ap_const_lv2_1))) then 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= ap_const_lv3_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_4) and (opch_fu_1016_p4 = ap_const_lv2_1))) then 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= ap_const_lv3_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_5) and (opch_fu_1016_p4 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_5) and (opch_fu_1016_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= ap_const_lv3_5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_0) and (opch_fu_1016_p4 = ap_const_lv2_3))) then 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= ap_const_lv3_4;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_1) and (opch_fu_1016_p4 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_4) and (opch_fu_1016_p4 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_0) and (opch_fu_1016_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= ap_const_lv3_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (opcl_fu_1026_p4 = ap_const_lv3_3) and (opch_fu_1016_p4 = ap_const_lv2_3))) then 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= ap_const_lv3_6;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_2)) or (not((opcl_fu_1026_p4 = ap_const_lv3_3)) and not((opcl_fu_1026_p4 = ap_const_lv3_1)) and not((opcl_fu_1026_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_3)) or (not((opcl_fu_1026_p4 = ap_const_lv3_4)) and not((opcl_fu_1026_p4 = ap_const_lv3_5)) and not((opcl_fu_1026_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_1)) or (not((opcl_fu_1026_p4 = ap_const_lv3_4)) and not((opcl_fu_1026_p4 = ap_const_lv3_5)) and not((opcl_fu_1026_p4 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (opch_fu_1016_p4 = ap_const_lv2_0)))) then 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= ap_const_lv3_7;
        else 
            ap_phi_mux_d_i_type_phi_fu_465_p26 <= "XXX";
        end if; 
    end process;


    ap_phi_mux_result_29_phi_fu_531_p48_assign_proc : process(reg_645, d_i_type_reg_462, select_ln100_reg_2775, result_27_reg_2790, result_21_reg_2810, result_20_reg_2815, result_14_reg_2835, result_8_reg_2855, ap_CS_fsm_state5, result_29_reg_527, zext_ln97_fu_1790_p1, ap_predicate_pred66_state5, ap_predicate_pred373_state5, zext_ln52_1_fu_1794_p1, ap_predicate_pred382_state5, zext_ln50_1_fu_1798_p1, ap_predicate_pred388_state5, ap_predicate_pred393_state5, ap_predicate_pred398_state5, ap_predicate_pred404_state5, ap_predicate_pred414_state5)
    begin
        if (((ap_predicate_pred414_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= result_8_reg_2855;
        elsif (((ap_predicate_pred404_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= result_14_reg_2835;
        elsif (((ap_predicate_pred398_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= result_20_reg_2815;
        elsif (((ap_predicate_pred393_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= result_21_reg_2810;
        elsif (((ap_predicate_pred388_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= zext_ln50_1_fu_1798_p1;
        elsif (((ap_predicate_pred382_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= zext_ln52_1_fu_1794_p1;
        elsif (((ap_predicate_pred373_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= result_27_reg_2790;
        elsif (((d_i_type_reg_462 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= select_ln100_reg_2775;
        elsif ((((d_i_type_reg_462 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_predicate_pred66_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= reg_645;
        elsif (((d_i_type_reg_462 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_result_29_phi_fu_531_p48 <= zext_ln97_fu_1790_p1;
        else 
            ap_phi_mux_result_29_phi_fu_531_p48 <= result_29_reg_527;
        end if; 
    end process;


    ap_phi_mux_result_34_phi_fu_587_p16_assign_proc : process(d_i_is_load_reg_2659, d_i_func3_reg_2642, w_reg_2926, sext_ln175_reg_2931, zext_ln176_reg_2936, sext_ln179_reg_2941, ap_CS_fsm_state7, result_29_reg_527, result_34_reg_584)
    begin
        if (((d_i_is_load_reg_2659 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_result_34_phi_fu_587_p16 <= result_29_reg_527;
        elsif (((d_i_func3_reg_2642 = ap_const_lv3_0) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_result_34_phi_fu_587_p16 <= sext_ln175_reg_2931;
        elsif (((d_i_func3_reg_2642 = ap_const_lv3_1) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_result_34_phi_fu_587_p16 <= sext_ln179_reg_2941;
        elsif (((d_i_func3_reg_2642 = ap_const_lv3_2) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_result_34_phi_fu_587_p16 <= w_reg_2926;
        elsif (((d_i_func3_reg_2642 = ap_const_lv3_4) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_phi_mux_result_34_phi_fu_587_p16 <= zext_ln176_reg_2936;
        elsif ((((d_i_func3_reg_2642 = ap_const_lv3_3) and (d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((d_i_func3_reg_2642 = ap_const_lv3_6) and (d_i_is_load_reg_2659 = ap_const_lv1_1)) or ((d_i_func3_reg_2642 = ap_const_lv3_7) and (d_i_is_load_reg_2659 = ap_const_lv1_1)))))) then 
            ap_phi_mux_result_34_phi_fu_587_p16 <= ap_const_lv32_0;
        else 
            ap_phi_mux_result_34_phi_fu_587_p16 <= result_34_reg_584;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    b0_fu_1930_p1 <= data_ram_q0(8 - 1 downto 0);
    b1_fu_1934_p4 <= data_ram_q0(15 downto 8);
    b2_fu_1948_p4 <= data_ram_q0(23 downto 16);
    b3_fu_1958_p4 <= data_ram_q0(31 downto 24);
    b_4_fu_1983_p3 <= 
        b2_fu_1948_p4 when (icmp_ln168_fu_1978_p2(0) = '1') else 
        b3_fu_1958_p4;
    b_5_fu_1996_p3 <= 
        b1_fu_1934_p4 when (icmp_ln168_1_fu_1991_p2(0) = '1') else 
        b_4_fu_1983_p3;
    b_fu_2009_p3 <= 
        b0_fu_1930_p1 when (icmp_ln168_2_fu_2004_p2(0) = '1') else 
        b_5_fu_1996_p3;
    code_ram_address0 <= zext_ln12_fu_825_p1(16 - 1 downto 0);

    code_ram_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            code_ram_ce0 <= ap_const_logic_1;
        else 
            code_ram_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_2223_p1 <= ap_phi_mux_result_34_phi_fu_587_p16(1 - 1 downto 0);
    d_i_imm_2_fu_1388_p4 <= instruction_reg_2613(31 downto 20);
    d_i_imm_3_fu_1376_p3 <= (tmp_2_fu_1367_p4 & d_i_rd_reg_2631);
    d_i_imm_4_fu_1353_p5 <= (((d_imm_inst_31_reg_2697 & d_imm_inst_7_reg_2708) & tmp_4_fu_1344_p4) & d_imm_inst_11_8_reg_2703);
    d_i_imm_fu_1428_p5 <= (((d_imm_inst_31_reg_2697 & d_imm_inst_19_12_reg_2637) & tmp_fu_1412_p3) & tmp_1_fu_1419_p4);
    d_i_is_jalr_fu_998_p2 <= "1" when (d_i_opcode_fu_926_p4 = ap_const_lv5_19) else "0";
    d_i_is_load_fu_986_p2 <= "1" when (d_i_opcode_fu_926_p4 = ap_const_lv5_0) else "0";
    d_i_is_lui_fu_1004_p2 <= "1" when (d_i_opcode_fu_926_p4 = ap_const_lv5_D) else "0";
    d_i_is_op_imm_fu_1010_p2 <= "1" when (d_i_opcode_fu_926_p4 = ap_const_lv5_4) else "0";
    d_i_is_r_type_fu_1036_p2 <= "1" when (ap_phi_mux_d_i_type_phi_fu_465_p26 = ap_const_lv3_1) else "0";
    d_i_is_store_fu_992_p2 <= "1" when (d_i_opcode_fu_926_p4 = ap_const_lv5_8) else "0";
    d_i_opcode_fu_926_p4 <= code_ram_q0(6 downto 2);

    data_ram_address0_assign_proc : process(d_i_is_load_reg_2659, d_i_is_store_reg_2663, ap_CS_fsm_state5, msize_fu_1806_p4, ap_CS_fsm_state6, zext_ln134_fu_1821_p1, zext_ln128_3_fu_1908_p1, zext_ln155_fu_1913_p1, zext_ln131_3_fu_1918_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_ram_address0 <= zext_ln131_3_fu_1918_p1(16 - 1 downto 0);
        elsif (((d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            data_ram_address0 <= zext_ln155_fu_1913_p1(16 - 1 downto 0);
        elsif (((d_i_is_store_reg_2663 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_0))) then 
            data_ram_address0 <= zext_ln128_3_fu_1908_p1(16 - 1 downto 0);
        elsif (((d_i_is_store_reg_2663 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_2))) then 
            data_ram_address0 <= zext_ln134_fu_1821_p1(16 - 1 downto 0);
        else 
            data_ram_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_ce0_assign_proc : process(d_i_is_load_reg_2659, d_i_is_store_reg_2663, ap_CS_fsm_state5, msize_fu_1806_p4, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((d_i_is_load_reg_2659 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((d_i_is_store_reg_2663 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_0)) or ((d_i_is_store_reg_2663 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_2)))) then 
            data_ram_ce0 <= ap_const_logic_1;
        else 
            data_ram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_ram_d0_assign_proc : process(d_i_is_store_reg_2663, rv2_reg_2746, ap_CS_fsm_state5, msize_fu_1806_p4, shl_ln131_2_reg_2896, shl_ln128_2_fu_1901_p2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_ram_d0 <= shl_ln131_2_reg_2896;
        elsif (((d_i_is_store_reg_2663 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_0))) then 
            data_ram_d0 <= shl_ln128_2_fu_1901_p2;
        elsif (((d_i_is_store_reg_2663 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_2))) then 
            data_ram_d0 <= rv2_reg_2746;
        else 
            data_ram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_ram_we0_assign_proc : process(d_i_is_store_reg_2663, ap_CS_fsm_state5, msize_fu_1806_p4, msize_reg_2877, shl_ln131_reg_2891, shl_ln128_fu_1882_p2, ap_CS_fsm_state6)
    begin
        if ((d_i_is_store_reg_2663 = ap_const_lv1_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (msize_reg_2877 = ap_const_lv2_1))) then 
                data_ram_we0 <= shl_ln131_reg_2891;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_0))) then 
                data_ram_we0 <= shl_ln128_fu_1882_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (msize_fu_1806_p4 = ap_const_lv2_2))) then 
                data_ram_we0 <= ap_const_lv4_F;
            else 
                data_ram_we0 <= ap_const_lv4_0;
            end if;
        else 
            data_ram_we0 <= ap_const_lv4_0;
        end if; 
    end process;

    grp_fu_611_p2 <= "1" when (unsigned(rv1_reg_2713) < unsigned(rv2_reg_2746)) else "0";
    grp_fu_615_p2 <= "1" when (signed(rv1_reg_2713) < signed(rv2_reg_2746)) else "0";
    grp_fu_619_p2 <= std_logic_vector(unsigned(rv1_reg_2713) + unsigned(sext_ln74_fu_1439_p1));
    grp_fu_623_p3 <= instruction_reg_2613(30 downto 30);
    grp_fu_630_p4 <= ap_phi_mux_result_29_phi_fu_531_p48(17 downto 2);
    grp_fu_640_p2 <= std_logic_vector(unsigned(pc_1_reg_2600) + unsigned(ap_const_lv16_1));
    h0_fu_1944_p1 <= data_ram_q0(16 - 1 downto 0);
    h1_fu_1968_p4 <= data_ram_q0(31 downto 16);
    h_fu_2025_p3 <= 
        h1_fu_1968_p4 when (a1_1_fu_1922_p3(0) = '1') else 
        h0_fu_1944_p1;
    icmp_ln12_1_fu_2326_p2 <= "0" when (pc_fu_270 = ap_const_lv16_0) else "1";
    icmp_ln12_fu_2321_p2 <= "0" when (instruction_reg_2613 = ap_const_lv32_8067) else "1";
    icmp_ln168_1_fu_1991_p2 <= "1" when (a01_reg_2870 = ap_const_lv2_1) else "0";
    icmp_ln168_2_fu_2004_p2 <= "1" when (a01_reg_2870 = ap_const_lv2_0) else "0";
    icmp_ln168_fu_1978_p2 <= "1" when (a01_reg_2870 = ap_const_lv2_2) else "0";
    icmp_ln18_1_fu_1521_p2 <= "1" when (d_i_func3_reg_2642 = ap_const_lv3_5) else "0";
    icmp_ln18_2_fu_1526_p2 <= "1" when (d_i_func3_reg_2642 = ap_const_lv3_4) else "0";
    icmp_ln18_3_fu_1531_p2 <= "1" when (d_i_func3_reg_2642 = ap_const_lv3_1) else "0";
    icmp_ln18_4_fu_1536_p2 <= "1" when (d_i_func3_reg_2642 = ap_const_lv3_0) else "0";
    icmp_ln18_5_fu_1599_p2 <= "0" when (d_i_func3_reg_2642 = ap_const_lv3_2) else "1";
    icmp_ln18_6_fu_1604_p2 <= "0" when (d_i_func3_reg_2642 = ap_const_lv3_3) else "1";
    icmp_ln18_fu_1516_p2 <= "1" when (d_i_func3_reg_2642 = ap_const_lv3_6) else "0";
    icmp_ln19_fu_1494_p2 <= "1" when (rv1_reg_2713 = rv2_reg_2746) else "0";
    icmp_ln205_1_fu_2051_p2 <= "0" when (or_ln205_fu_2046_p2 = ap_const_lv5_18) else "1";
    icmp_ln205_fu_2041_p2 <= "0" when (d_i_rd_reg_2631 = ap_const_lv5_0) else "1";
    icmp_ln20_fu_1498_p2 <= "0" when (rv1_reg_2713 = rv2_reg_2746) else "1";
    icmp_ln24_fu_1502_p2 <= "1" when (signed(rv1_reg_2713) < signed(rv2_reg_2746)) else "0";
    icmp_ln25_fu_1512_p2 <= "1" when (unsigned(rv1_reg_2713) < unsigned(rv2_reg_2746)) else "0";
    imm12_fu_1448_p3 <= (ap_phi_mux_d_i_imm_5_phi_fu_511_p12 & ap_const_lv12_0);
    msize_fu_1806_p4 <= instruction_reg_2613(13 downto 12);

    nb_instruction_ap_vld_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            nb_instruction_ap_vld <= ap_const_logic_1;
        else 
            nb_instruction_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    npc4_fu_1465_p2 <= std_logic_vector(unsigned(pc4_fu_1456_p2) + unsigned(ap_const_lv16_4));
    opch_fu_1016_p4 <= code_ram_q0(6 downto 5);
    opcl_fu_1026_p4 <= code_ram_q0(4 downto 2);
    or_ln12_fu_2332_p2 <= (icmp_ln12_reg_2954 or icmp_ln12_1_fu_2326_p2);
    or_ln18_1_fu_1563_p2 <= (icmp_ln18_2_fu_1526_p2 or icmp_ln18_1_fu_1521_p2);
    or_ln18_2_fu_1585_p2 <= (or_ln18_fu_1549_p2 or or_ln18_1_fu_1563_p2);
    or_ln18_fu_1549_p2 <= (icmp_ln18_4_fu_1536_p2 or icmp_ln18_3_fu_1531_p2);
    or_ln205_fu_2046_p2 <= (d_i_opcode_reg_2626 or ap_const_lv5_10);
    pc4_fu_1456_p2 <= std_logic_vector(shift_left(unsigned(pc_1_reg_2600),to_integer(unsigned('0' & ap_const_lv16_2(16-1 downto 0)))));
    result_11_fu_1744_p2 <= (rv2_reg_2746 xor rv1_reg_2713);
    result_12_fu_1726_p2 <= std_logic_vector(shift_right(signed(rv1_reg_2713),to_integer(unsigned('0' & zext_ln57_fu_1722_p1(31-1 downto 0)))));
    result_13_fu_1731_p2 <= std_logic_vector(shift_right(unsigned(rv1_reg_2713),to_integer(unsigned('0' & zext_ln57_fu_1722_p1(31-1 downto 0)))));
    result_14_fu_1736_p3 <= 
        result_12_fu_1726_p2 when (grp_fu_623_p3(0) = '1') else 
        result_13_fu_1731_p2;
    result_15_fu_1718_p2 <= (rv2_reg_2746 or rv1_reg_2713);
    result_17_fu_1700_p2 <= (sext_ln74_fu_1439_p1 and rv1_reg_2713);
    result_18_fu_1687_p2 <= std_logic_vector(unsigned(rv1_reg_2713) - unsigned(sext_ln74_fu_1439_p1));
    result_1_fu_1615_p2 <= (select_ln18_4_fu_1591_p3 and and_ln18_fu_1609_p2);
    result_20_fu_1692_p3 <= 
        result_18_fu_1687_p2 when (and_ln43_1_fu_1682_p2(0) = '1') else 
        grp_fu_619_p2;
    result_21_fu_1677_p2 <= std_logic_vector(shift_left(unsigned(rv1_reg_2713),to_integer(unsigned('0' & zext_ln48_1_fu_1673_p1(31-1 downto 0)))));
    result_22_fu_1668_p2 <= "1" when (signed(rv1_reg_2713) < signed(sext_ln74_fu_1439_p1)) else "0";
    result_23_fu_1663_p2 <= "1" when (unsigned(rv1_reg_2713) < unsigned(sext_ln74_fu_1439_p1)) else "0";
    result_24_fu_1658_p2 <= (sext_ln74_fu_1439_p1 xor rv1_reg_2713);
    result_25_fu_1640_p2 <= std_logic_vector(shift_right(signed(rv1_reg_2713),to_integer(unsigned('0' & zext_ln57_1_fu_1636_p1(31-1 downto 0)))));
    result_26_fu_1645_p2 <= std_logic_vector(shift_right(unsigned(rv1_reg_2713),to_integer(unsigned('0' & zext_ln57_1_fu_1636_p1(31-1 downto 0)))));
    result_27_fu_1650_p3 <= 
        result_25_fu_1640_p2 when (grp_fu_623_p3(0) = '1') else 
        result_26_fu_1645_p2;
    result_28_fu_1631_p2 <= (sext_ln74_fu_1439_p1 or rv1_reg_2713);
    result_2_fu_1475_p2 <= std_logic_vector(unsigned(imm12_fu_1448_p3) + unsigned(zext_ln103_fu_1461_p1));
    result_4_fu_1786_p2 <= (rv2_reg_2746 and rv1_reg_2713);
    result_5_fu_1770_p2 <= std_logic_vector(unsigned(rv1_reg_2713) - unsigned(rv2_reg_2746));
    result_6_fu_1774_p2 <= std_logic_vector(unsigned(rv2_reg_2746) + unsigned(rv1_reg_2713));
    result_7_fu_1778_p3 <= 
        result_5_fu_1770_p2 when (and_ln43_fu_1765_p2(0) = '1') else 
        result_6_fu_1774_p2;
    result_8_fu_1760_p2 <= std_logic_vector(shift_left(unsigned(rv1_reg_2713),to_integer(unsigned('0' & zext_ln48_fu_1756_p1(31-1 downto 0)))));
    rv1_fu_1068_p65 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    rv1_fu_1068_p66 <= code_ram_q0(19 downto 15);
    rv2_01_fu_1818_p1 <= rv2_reg_2746(16 - 1 downto 0);
    rv2_0_fu_1815_p1 <= rv2_reg_2746(8 - 1 downto 0);
    rv2_fu_1208_p65 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    rv2_fu_1208_p66 <= code_ram_q0(24 downto 20);
    select_ln100_fu_1481_p3 <= 
        imm12_fu_1448_p3 when (d_i_is_lui_reg_2672(0) = '1') else 
        result_2_fu_1475_p2;
    select_ln18_1_fu_1555_p3 <= 
        grp_fu_615_p2 when (icmp_ln18_2_fu_1526_p2(0) = '1') else 
        xor_ln24_fu_1506_p2;
    select_ln18_2_fu_1569_p3 <= 
        icmp_ln25_fu_1512_p2 when (icmp_ln18_fu_1516_p2(0) = '1') else 
        xor_ln26_fu_1488_p2;
    select_ln18_3_fu_1577_p3 <= 
        select_ln18_fu_1541_p3 when (or_ln18_fu_1549_p2(0) = '1') else 
        select_ln18_1_fu_1555_p3;
    select_ln18_4_fu_1591_p3 <= 
        select_ln18_3_fu_1577_p3 when (or_ln18_2_fu_1585_p2(0) = '1') else 
        select_ln18_2_fu_1569_p3;
    select_ln18_fu_1541_p3 <= 
        icmp_ln19_fu_1494_p2 when (icmp_ln18_4_fu_1536_p2(0) = '1') else 
        icmp_ln20_fu_1498_p2;
    select_ln222_fu_2299_p3 <= 
        trunc_ln4_fu_2289_p4 when (d_i_is_jalr_reg_2667(0) = '1') else 
        grp_fu_640_p2;
    select_ln264_fu_2262_p3 <= 
        trunc_ln5_fu_2252_p4 when (cond_fu_2223_p1(0) = '1') else 
        ap_const_lv16_1;
        sext_ln141_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_imm_2_fu_1388_p4),20));

        sext_ln142_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_imm_3_fu_1376_p3),20));

        sext_ln143_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_imm_4_fu_1353_p5),20));

        sext_ln175_fu_2017_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_fu_2009_p3),32));

        sext_ln179_fu_2033_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_fu_2025_p3),32));

        sext_ln74_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_d_i_imm_5_phi_fu_511_p12),32));

    shift_1_fu_1712_p3 <= 
        shift_fu_1709_p1 when (d_i_is_r_type_reg_2689(0) = '1') else 
        d_i_rs2_reg_2653;
    shift_2_fu_1621_p1 <= ap_phi_mux_d_i_imm_5_phi_fu_511_p12(5 - 1 downto 0);
    shift_3_fu_1625_p3 <= 
        shift_2_fu_1621_p1 when (d_i_is_r_type_reg_2689(0) = '1') else 
        d_i_rs2_reg_2653;
    shift_fu_1709_p1 <= rv2_reg_2746(5 - 1 downto 0);
    shl_ln128_1_fu_1889_p3 <= (a01_fu_1802_p1 & ap_const_lv3_0);
    shl_ln128_2_fu_1901_p2 <= std_logic_vector(shift_left(unsigned(zext_ln128_fu_1874_p1),to_integer(unsigned('0' & zext_ln128_2_fu_1897_p1(31-1 downto 0)))));
    shl_ln128_fu_1882_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln128_1_fu_1878_p1(4-1 downto 0)))));
    shl_ln131_1_fu_1856_p3 <= (tmp_6_fu_1830_p3 & ap_const_lv4_0);
    shl_ln131_2_fu_1868_p2 <= std_logic_vector(shift_left(unsigned(zext_ln131_fu_1826_p1),to_integer(unsigned('0' & zext_ln131_2_fu_1864_p1(31-1 downto 0)))));
    shl_ln131_fu_1850_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln131_1_fu_1846_p1(4-1 downto 0)))));
    tmp_1_fu_1419_p4 <= instruction_reg_2613(30 downto 21);
    tmp_2_fu_1367_p4 <= instruction_reg_2613(31 downto 25);
    tmp_4_fu_1344_p4 <= instruction_reg_2613(30 downto 25);
    tmp_6_fu_1830_p3 <= ap_phi_mux_result_29_phi_fu_531_p48(1 downto 1);
    tmp_fu_1412_p3 <= instruction_reg_2613(20 downto 20);
    trunc_ln254_fu_1204_p1 <= rv1_fu_1068_p67(18 - 1 downto 0);
    trunc_ln39_fu_651_p1 <= start_pc(16 - 1 downto 0);
    trunc_ln4_fu_2289_p4 <= add_ln224_fu_2285_p2(17 downto 2);
    trunc_ln5_fu_2252_p4 <= d_i_imm_5_reg_507(16 downto 1);
    trunc_ln6_fu_2227_p4 <= d_i_imm_5_reg_507(16 downto 1);
    trunc_ln74_fu_1444_p1 <= ap_phi_mux_d_i_imm_5_phi_fu_511_p12(18 - 1 downto 0);
    xor_ln24_fu_1506_p2 <= (icmp_ln24_fu_1502_p2 xor ap_const_lv1_1);
    xor_ln26_fu_1488_p2 <= (grp_fu_611_p2 xor ap_const_lv1_1);
    zext_ln103_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc4_fu_1456_p2),32));
    zext_ln106_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_1465_p2),32));
    zext_ln128_1_fu_1878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a01_fu_1802_p1),4));
    zext_ln128_2_fu_1897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln128_1_fu_1889_p3),32));
    zext_ln128_3_fu_1908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_630_p4),64));
    zext_ln128_fu_1874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_0_fu_1815_p1),32));
    zext_ln12_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc_fu_270),64));
    zext_ln131_1_fu_1846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_1838_p3),4));
    zext_ln131_2_fu_1864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln131_1_fu_1856_p3),32));
    zext_ln131_3_fu_1918_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a1_reg_2881),64));
    zext_ln131_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rv2_01_fu_1818_p1),32));
    zext_ln134_fu_1821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_630_p4),64));
    zext_ln155_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_630_p4),64));
    zext_ln176_fu_2021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_fu_2009_p3),32));
    zext_ln180_fu_2037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_2025_p3),32));
    zext_ln48_1_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_3_fu_1625_p3),32));
    zext_ln48_fu_1756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_1_fu_1712_p3),32));
    zext_ln50_1_fu_1798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_22_reg_2805),32));
    zext_ln50_fu_1752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_615_p2),32));
    zext_ln52_1_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_23_reg_2800),32));
    zext_ln52_fu_1748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_611_p2),32));
    zext_ln57_1_fu_1636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_3_fu_1625_p3),32));
    zext_ln57_fu_1722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_1_fu_1712_p3),32));
    zext_ln84_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(npc4_fu_1465_p2),32));
    zext_ln97_fu_1790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_1_reg_2780),32));
end behav;
