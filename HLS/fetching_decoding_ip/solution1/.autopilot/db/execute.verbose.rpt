

================================================================
== Vitis HLS Report for 'execute'
================================================================
* Date:           Fri Jun  2 20:35:45 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        fetching_decoding_ip
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.705 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|    147|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        -|    -|       -|      -|    -|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       -|      -|    -|
|Register         |        -|    -|       -|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        0|    0|       0|    147|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      280|  220|  106400|  53200|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        0|    0|       0|     ~0|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +------------------------+----------+----+---+----+------------+------------+
    |      Variable Name     | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +------------------------+----------+----+---+----+------------+------------+
    |ap_return               |         +|   0|  0|  23|          16|          16|
    |icmp_ln8_1_fu_66_p2     |      icmp|   0|  0|  11|           3|           3|
    |icmp_ln8_2_fu_72_p2     |      icmp|   0|  0|  13|           3|           4|
    |icmp_ln8_3_fu_78_p2     |      icmp|   0|  0|  11|           3|           2|
    |icmp_ln8_4_fu_84_p2     |      icmp|   0|  0|  11|           3|           2|
    |icmp_ln8_5_fu_90_p2     |      icmp|   0|  0|  11|           3|           1|
    |icmp_ln8_fu_60_p2       |      icmp|   0|  0|  11|           3|           3|
    |or_ln8_1_fu_102_p2      |        or|   0|  0|   2|           1|           1|
    |or_ln8_2_fu_116_p2      |        or|   0|  0|   2|           1|           1|
    |or_ln8_3_fu_122_p2      |        or|   0|  0|   2|           1|           1|
    |or_ln8_fu_96_p2         |        or|   0|  0|   2|           1|           1|
    |select_ln8_1_fu_128_p3  |    select|   0|  0|  16|           1|          16|
    |select_ln8_2_fu_136_p3  |    select|   0|  0|  16|           1|           1|
    |select_ln8_fu_108_p3    |    select|   0|  0|  16|           1|           1|
    +------------------------+----------+----+---+----+------------+------------+
    |Total                   |          |   0|  0| 147|          41|          53|
    +------------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+--------------+-----+-----+------------+--------------+--------------+
|   RTL Ports  | Dir | Bits|  Protocol  | Source Object|    C Type    |
+--------------+-----+-----+------------+--------------+--------------+
|ap_ready      |  out|    1|  ap_ctrl_hs|       execute|  return value|
|ap_return     |  out|   16|  ap_ctrl_hs|       execute|  return value|
|pc_val        |   in|   16|     ap_none|        pc_val|        scalar|
|d_i_type_val  |   in|    3|     ap_none|  d_i_type_val|        scalar|
|d_i_imm_val   |   in|   17|     ap_none|   d_i_imm_val|        scalar|
+--------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 1
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.70>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%d_i_imm_val_read = read i17 @_ssdm_op_Read.ap_auto.i17, i17 %d_i_imm_val" [fetching_decoding_ip/src/execute.cpp:5->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 2 'read' 'd_i_imm_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%d_i_type_val_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %d_i_type_val" [fetching_decoding_ip/src/execute.cpp:5->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 3 'read' 'd_i_type_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%pc_val_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %pc_val" [fetching_decoding_ip/src/execute.cpp:5->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 4 'read' 'pc_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns) (grouped into LUT with out node select_ln8_1)   --->   "%trunc_ln = partselect i16 @_ssdm_op_PartSelect.i16.i17.i32.i32, i17 %d_i_imm_val_read, i32 1, i32 16" [fetching_decoding_ip/src/execute.cpp:25->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 5 'partselect' 'trunc_ln' <Predicate = (!icmp_ln8_1 & or_ln8_2 & !or_ln8_3)> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.65ns)   --->   "%icmp_ln8 = icmp_eq  i3 %d_i_type_val_read, i3 6" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 6 'icmp' 'icmp_ln8' <Predicate = (!or_ln8_3)> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 7 [1/1] (1.65ns)   --->   "%icmp_ln8_1 = icmp_eq  i3 %d_i_type_val_read, i3 5" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 7 'icmp' 'icmp_ln8_1' <Predicate = (!or_ln8_3)> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (1.65ns)   --->   "%icmp_ln8_2 = icmp_eq  i3 %d_i_type_val_read, i3 4" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 8 'icmp' 'icmp_ln8_2' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (1.65ns)   --->   "%icmp_ln8_3 = icmp_eq  i3 %d_i_type_val_read, i3 3" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 9 'icmp' 'icmp_ln8_3' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (1.65ns)   --->   "%icmp_ln8_4 = icmp_eq  i3 %d_i_type_val_read, i3 2" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 10 'icmp' 'icmp_ln8_4' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (1.65ns)   --->   "%icmp_ln8_5 = icmp_eq  i3 %d_i_type_val_read, i3 1" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 11 'icmp' 'icmp_ln8_5' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node next_pc)   --->   "%or_ln8 = or i1 %icmp_ln8_5, i1 %icmp_ln8_4" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 12 'or' 'or_ln8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node next_pc)   --->   "%or_ln8_1 = or i1 %icmp_ln8_3, i1 %icmp_ln8_2" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 13 'or' 'or_ln8_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node select_ln8_1)   --->   "%select_ln8 = select i1 %icmp_ln8_1, i16 1, i16 %trunc_ln" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 14 'select' 'select_ln8' <Predicate = (or_ln8_2 & !or_ln8_3)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node select_ln8_1)   --->   "%or_ln8_2 = or i1 %icmp_ln8_1, i1 %icmp_ln8" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 15 'or' 'or_ln8_2' <Predicate = (!or_ln8_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node next_pc)   --->   "%or_ln8_3 = or i1 %or_ln8, i1 %or_ln8_1" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 16 'or' 'or_ln8_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln8_1 = select i1 %or_ln8_2, i16 %select_ln8, i16 1" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 17 'select' 'select_ln8_1' <Predicate = (!or_ln8_3)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node next_pc)   --->   "%select_ln8_2 = select i1 %or_ln8_3, i16 1, i16 %select_ln8_1" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 18 'select' 'select_ln8_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (2.07ns) (out node of the LUT)   --->   "%next_pc = add i16 %select_ln8_2, i16 %pc_val_read" [fetching_decoding_ip/src/execute.cpp:8->fetching_decoding_ip/src/execute.cpp:39]   --->   Operation 19 'add' 'next_pc' <Predicate = true> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%ret_ln40 = ret i16 %next_pc" [fetching_decoding_ip/src/execute.cpp:40]   --->   Operation 20 'ret' 'ret_ln40' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ pc_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_i_type_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ d_i_imm_val]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
d_i_imm_val_read  (read      ) [ 00]
d_i_type_val_read (read      ) [ 00]
pc_val_read       (read      ) [ 00]
trunc_ln          (partselect) [ 00]
icmp_ln8          (icmp      ) [ 00]
icmp_ln8_1        (icmp      ) [ 01]
icmp_ln8_2        (icmp      ) [ 00]
icmp_ln8_3        (icmp      ) [ 00]
icmp_ln8_4        (icmp      ) [ 00]
icmp_ln8_5        (icmp      ) [ 00]
or_ln8            (or        ) [ 00]
or_ln8_1          (or        ) [ 00]
select_ln8        (select    ) [ 00]
or_ln8_2          (or        ) [ 01]
or_ln8_3          (or        ) [ 01]
select_ln8_1      (select    ) [ 00]
select_ln8_2      (select    ) [ 00]
next_pc           (add       ) [ 00]
ret_ln40          (ret       ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="pc_val">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="pc_val"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="d_i_type_val">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_i_type_val"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="d_i_imm_val">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="d_i_imm_val"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i17"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i3"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i16"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i16.i17.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1004" name="d_i_imm_val_read_read_fu_32">
<pin_list>
<pin id="33" dir="0" index="0" bw="17" slack="0"/>
<pin id="34" dir="0" index="1" bw="17" slack="0"/>
<pin id="35" dir="1" index="2" bw="17" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_i_imm_val_read/1 "/>
</bind>
</comp>

<comp id="38" class="1004" name="d_i_type_val_read_read_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="3" slack="0"/>
<pin id="40" dir="0" index="1" bw="3" slack="0"/>
<pin id="41" dir="1" index="2" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="d_i_type_val_read/1 "/>
</bind>
</comp>

<comp id="44" class="1004" name="pc_val_read_read_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="16" slack="0"/>
<pin id="46" dir="0" index="1" bw="16" slack="0"/>
<pin id="47" dir="1" index="2" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="pc_val_read/1 "/>
</bind>
</comp>

<comp id="50" class="1004" name="trunc_ln_fu_50">
<pin_list>
<pin id="51" dir="0" index="0" bw="16" slack="0"/>
<pin id="52" dir="0" index="1" bw="17" slack="0"/>
<pin id="53" dir="0" index="2" bw="1" slack="0"/>
<pin id="54" dir="0" index="3" bw="6" slack="0"/>
<pin id="55" dir="1" index="4" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="trunc_ln/1 "/>
</bind>
</comp>

<comp id="60" class="1004" name="icmp_ln8_fu_60">
<pin_list>
<pin id="61" dir="0" index="0" bw="3" slack="0"/>
<pin id="62" dir="0" index="1" bw="3" slack="0"/>
<pin id="63" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln8/1 "/>
</bind>
</comp>

<comp id="66" class="1004" name="icmp_ln8_1_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="3" slack="0"/>
<pin id="68" dir="0" index="1" bw="3" slack="0"/>
<pin id="69" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln8_1/1 "/>
</bind>
</comp>

<comp id="72" class="1004" name="icmp_ln8_2_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="3" slack="0"/>
<pin id="74" dir="0" index="1" bw="3" slack="0"/>
<pin id="75" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln8_2/1 "/>
</bind>
</comp>

<comp id="78" class="1004" name="icmp_ln8_3_fu_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="3" slack="0"/>
<pin id="80" dir="0" index="1" bw="3" slack="0"/>
<pin id="81" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln8_3/1 "/>
</bind>
</comp>

<comp id="84" class="1004" name="icmp_ln8_4_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="3" slack="0"/>
<pin id="86" dir="0" index="1" bw="3" slack="0"/>
<pin id="87" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln8_4/1 "/>
</bind>
</comp>

<comp id="90" class="1004" name="icmp_ln8_5_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="3" slack="0"/>
<pin id="92" dir="0" index="1" bw="3" slack="0"/>
<pin id="93" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln8_5/1 "/>
</bind>
</comp>

<comp id="96" class="1004" name="or_ln8_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="1" slack="0"/>
<pin id="98" dir="0" index="1" bw="1" slack="0"/>
<pin id="99" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln8/1 "/>
</bind>
</comp>

<comp id="102" class="1004" name="or_ln8_1_fu_102">
<pin_list>
<pin id="103" dir="0" index="0" bw="1" slack="0"/>
<pin id="104" dir="0" index="1" bw="1" slack="0"/>
<pin id="105" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln8_1/1 "/>
</bind>
</comp>

<comp id="108" class="1004" name="select_ln8_fu_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="1" slack="0"/>
<pin id="110" dir="0" index="1" bw="16" slack="0"/>
<pin id="111" dir="0" index="2" bw="16" slack="0"/>
<pin id="112" dir="1" index="3" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln8/1 "/>
</bind>
</comp>

<comp id="116" class="1004" name="or_ln8_2_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="1" slack="0"/>
<pin id="118" dir="0" index="1" bw="1" slack="0"/>
<pin id="119" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln8_2/1 "/>
</bind>
</comp>

<comp id="122" class="1004" name="or_ln8_3_fu_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="1" slack="0"/>
<pin id="124" dir="0" index="1" bw="1" slack="0"/>
<pin id="125" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln8_3/1 "/>
</bind>
</comp>

<comp id="128" class="1004" name="select_ln8_1_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="1" slack="0"/>
<pin id="130" dir="0" index="1" bw="16" slack="0"/>
<pin id="131" dir="0" index="2" bw="16" slack="0"/>
<pin id="132" dir="1" index="3" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln8_1/1 "/>
</bind>
</comp>

<comp id="136" class="1004" name="select_ln8_2_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="1" slack="0"/>
<pin id="138" dir="0" index="1" bw="16" slack="0"/>
<pin id="139" dir="0" index="2" bw="16" slack="0"/>
<pin id="140" dir="1" index="3" bw="16" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln8_2/1 "/>
</bind>
</comp>

<comp id="144" class="1004" name="next_pc_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="16" slack="0"/>
<pin id="146" dir="0" index="1" bw="16" slack="0"/>
<pin id="147" dir="1" index="2" bw="16" slack="2147483647"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="next_pc/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="36"><net_src comp="6" pin="0"/><net_sink comp="32" pin=0"/></net>

<net id="37"><net_src comp="4" pin="0"/><net_sink comp="32" pin=1"/></net>

<net id="42"><net_src comp="8" pin="0"/><net_sink comp="38" pin=0"/></net>

<net id="43"><net_src comp="2" pin="0"/><net_sink comp="38" pin=1"/></net>

<net id="48"><net_src comp="10" pin="0"/><net_sink comp="44" pin=0"/></net>

<net id="49"><net_src comp="0" pin="0"/><net_sink comp="44" pin=1"/></net>

<net id="56"><net_src comp="12" pin="0"/><net_sink comp="50" pin=0"/></net>

<net id="57"><net_src comp="32" pin="2"/><net_sink comp="50" pin=1"/></net>

<net id="58"><net_src comp="14" pin="0"/><net_sink comp="50" pin=2"/></net>

<net id="59"><net_src comp="16" pin="0"/><net_sink comp="50" pin=3"/></net>

<net id="64"><net_src comp="38" pin="2"/><net_sink comp="60" pin=0"/></net>

<net id="65"><net_src comp="18" pin="0"/><net_sink comp="60" pin=1"/></net>

<net id="70"><net_src comp="38" pin="2"/><net_sink comp="66" pin=0"/></net>

<net id="71"><net_src comp="20" pin="0"/><net_sink comp="66" pin=1"/></net>

<net id="76"><net_src comp="38" pin="2"/><net_sink comp="72" pin=0"/></net>

<net id="77"><net_src comp="22" pin="0"/><net_sink comp="72" pin=1"/></net>

<net id="82"><net_src comp="38" pin="2"/><net_sink comp="78" pin=0"/></net>

<net id="83"><net_src comp="24" pin="0"/><net_sink comp="78" pin=1"/></net>

<net id="88"><net_src comp="38" pin="2"/><net_sink comp="84" pin=0"/></net>

<net id="89"><net_src comp="26" pin="0"/><net_sink comp="84" pin=1"/></net>

<net id="94"><net_src comp="38" pin="2"/><net_sink comp="90" pin=0"/></net>

<net id="95"><net_src comp="28" pin="0"/><net_sink comp="90" pin=1"/></net>

<net id="100"><net_src comp="90" pin="2"/><net_sink comp="96" pin=0"/></net>

<net id="101"><net_src comp="84" pin="2"/><net_sink comp="96" pin=1"/></net>

<net id="106"><net_src comp="78" pin="2"/><net_sink comp="102" pin=0"/></net>

<net id="107"><net_src comp="72" pin="2"/><net_sink comp="102" pin=1"/></net>

<net id="113"><net_src comp="66" pin="2"/><net_sink comp="108" pin=0"/></net>

<net id="114"><net_src comp="30" pin="0"/><net_sink comp="108" pin=1"/></net>

<net id="115"><net_src comp="50" pin="4"/><net_sink comp="108" pin=2"/></net>

<net id="120"><net_src comp="66" pin="2"/><net_sink comp="116" pin=0"/></net>

<net id="121"><net_src comp="60" pin="2"/><net_sink comp="116" pin=1"/></net>

<net id="126"><net_src comp="96" pin="2"/><net_sink comp="122" pin=0"/></net>

<net id="127"><net_src comp="102" pin="2"/><net_sink comp="122" pin=1"/></net>

<net id="133"><net_src comp="116" pin="2"/><net_sink comp="128" pin=0"/></net>

<net id="134"><net_src comp="108" pin="3"/><net_sink comp="128" pin=1"/></net>

<net id="135"><net_src comp="30" pin="0"/><net_sink comp="128" pin=2"/></net>

<net id="141"><net_src comp="122" pin="2"/><net_sink comp="136" pin=0"/></net>

<net id="142"><net_src comp="30" pin="0"/><net_sink comp="136" pin=1"/></net>

<net id="143"><net_src comp="128" pin="3"/><net_sink comp="136" pin=2"/></net>

<net id="148"><net_src comp="136" pin="3"/><net_sink comp="144" pin=0"/></net>

<net id="149"><net_src comp="44" pin="2"/><net_sink comp="144" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: execute : pc_val | {1 }
	Port: execute : d_i_type_val | {1 }
	Port: execute : d_i_imm_val | {1 }
  - Chain level:
	State 1
		or_ln8 : 1
		or_ln8_1 : 1
		select_ln8 : 1
		or_ln8_2 : 1
		or_ln8_3 : 1
		select_ln8_1 : 1
		select_ln8_2 : 1
		next_pc : 2
		ret_ln40 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------------|---------|---------|
| Operation|        Functional Unit       |    FF   |   LUT   |
|----------|------------------------------|---------|---------|
|          |        icmp_ln8_fu_60        |    0    |    11   |
|          |       icmp_ln8_1_fu_66       |    0    |    11   |
|   icmp   |       icmp_ln8_2_fu_72       |    0    |    11   |
|          |       icmp_ln8_3_fu_78       |    0    |    11   |
|          |       icmp_ln8_4_fu_84       |    0    |    11   |
|          |       icmp_ln8_5_fu_90       |    0    |    11   |
|----------|------------------------------|---------|---------|
|          |       select_ln8_fu_108      |    0    |    16   |
|  select  |      select_ln8_1_fu_128     |    0    |    16   |
|          |      select_ln8_2_fu_136     |    0    |    16   |
|----------|------------------------------|---------|---------|
|    add   |        next_pc_fu_144        |    0    |    23   |
|----------|------------------------------|---------|---------|
|          |         or_ln8_fu_96         |    0    |    2    |
|    or    |        or_ln8_1_fu_102       |    0    |    2    |
|          |        or_ln8_2_fu_116       |    0    |    2    |
|          |        or_ln8_3_fu_122       |    0    |    2    |
|----------|------------------------------|---------|---------|
|          |  d_i_imm_val_read_read_fu_32 |    0    |    0    |
|   read   | d_i_type_val_read_read_fu_38 |    0    |    0    |
|          |    pc_val_read_read_fu_44    |    0    |    0    |
|----------|------------------------------|---------|---------|
|partselect|        trunc_ln_fu_50        |    0    |    0    |
|----------|------------------------------|---------|---------|
|   Total  |                              |    0    |   145   |
|----------|------------------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   145  |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   145  |
+-----------+--------+--------+
